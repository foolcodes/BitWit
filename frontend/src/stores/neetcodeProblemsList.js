const problems = [
  {
    neetcode250: !0,
    problem: "Concatenation of Array",
    pattern: "Arrays & Hashing",
    link: "concatenation-of-array/",
    video: "68isPRHgcFQ",
    difficulty: "Easy",
    code: "1929-concatenation-of-array",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Contains Duplicate",
    pattern: "Arrays & Hashing",
    link: "contains-duplicate/",
    ncLink: "duplicate-integer/",
    video: "3OamzN90kPg",
    difficulty: "Easy",
    code: "0217-contains-duplicate",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Valid Anagram",
    pattern: "Arrays & Hashing",
    link: "valid-anagram/",
    ncLink: "is-anagram/",
    video: "9UtInBqnCgA",
    difficulty: "Easy",
    code: "0242-valid-anagram",
  },
  {
    problem: "Replace Elements With Greatest Element On Right Side",
    pattern: "Arrays & Hashing",
    link: "replace-elements-with-greatest-element-on-right-side/",
    video: "ZHjKhUjcsaU",
    difficulty: "Easy",
    code: "1299-replace-elements-with-greatest-element-on-right-side",
  },
  {
    problem: "Is Subsequence",
    pattern: "Arrays & Hashing",
    link: "is-subsequence/",
    video: "99RVfqklbCE",
    difficulty: "Easy",
    code: "0392-is-subsequence",
  },
  {
    problem: "Length of Last Word",
    pattern: "Arrays & Hashing",
    link: "length-of-last-word/",
    video: "KT9rltZTybQ",
    difficulty: "Easy",
    code: "0058-length-of-last-word",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Two Sum",
    pattern: "Arrays & Hashing",
    link: "two-sum/",
    ncLink: "two-integer-sum/",
    video: "KLlXCFG5TnA",
    difficulty: "Easy",
    code: "0001-two-sum",
  },
  {
    neetcode250: !0,
    problem: "Longest Common Prefix",
    pattern: "Arrays & Hashing",
    link: "longest-common-prefix/",
    video: "0sWShKIJoo4",
    difficulty: "Easy",
    code: "0014-longest-common-prefix",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Group Anagrams",
    pattern: "Arrays & Hashing",
    link: "group-anagrams/",
    ncLink: "anagram-groups/",
    video: "vzdNOK2oB2E",
    difficulty: "Medium",
    code: "0049-group-anagrams",
  },
  {
    problem: "Pascals Triangle",
    pattern: "Arrays & Hashing",
    link: "pascals-triangle/",
    video: "nPVEaB3AjUM",
    difficulty: "Easy",
    code: "0118-pascals-triangle",
  },
  {
    neetcode250: !0,
    problem: "Remove Element",
    pattern: "Arrays & Hashing",
    link: "remove-element/",
    video: "Pcd1ii9P9ZI",
    difficulty: "Easy",
    code: "0027-remove-element",
  },
  {
    problem: "Unique Email Addresses",
    pattern: "Arrays & Hashing",
    link: "unique-email-addresses/",
    video: "TC_xLIWl7qY",
    difficulty: "Easy",
    code: "0929-unique-email-addresses",
  },
  {
    problem: "Isomorphic Strings",
    pattern: "Arrays & Hashing",
    link: "isomorphic-strings/",
    video: "7yF-U1hLEqQ",
    difficulty: "Easy",
    code: "0205-isomorphic-strings",
  },
  {
    problem: "Can Place Flowers",
    pattern: "Arrays & Hashing",
    link: "can-place-flowers/",
    video: "ZGxqqjljpUI",
    difficulty: "Easy",
    code: "0605-can-place-flowers",
  },
  {
    neetcode250: !0,
    problem: "Majority Element",
    pattern: "Arrays & Hashing",
    link: "majority-element/",
    video: "7pnhv842keE",
    difficulty: "Easy",
    code: "0169-majority-element",
  },
  {
    problem: "Next Greater Element I",
    pattern: "Arrays & Hashing",
    link: "next-greater-element-i/",
    video: "68a1Dc_qVq4",
    difficulty: "Easy",
    code: "0496-next-greater-element-i",
  },
  {
    problem: "Find Pivot Index",
    pattern: "Arrays & Hashing",
    link: "find-pivot-index/",
    video: "u89i60lYx8U",
    difficulty: "Easy",
    code: "0724-find-pivot-index",
  },
  {
    problem: "Range Sum Query - Immutable",
    pattern: "Arrays & Hashing",
    link: "range-sum-query-immutable/",
    video: "2pndAmo_sMA",
    difficulty: "Easy",
    code: "0303-range-sum-query-immutable",
  },
  {
    problem: "Find All Numbers Disappeared in An Array",
    pattern: "Arrays & Hashing",
    link: "find-all-numbers-disappeared-in-an-array/",
    video: "8i-f24YFWC4",
    difficulty: "Easy",
    code: "0448-find-all-numbers-disappeared-in-an-array",
  },
  {
    problem: "Maximum Number of Balloons",
    pattern: "Arrays & Hashing",
    link: "maximum-number-of-balloons/",
    video: "G9xeB2-7PqY",
    difficulty: "Easy",
    code: "1189-maximum-number-of-balloons",
  },
  {
    problem: "Word Pattern",
    pattern: "Arrays & Hashing",
    link: "word-pattern/",
    video: "W_akoecmCbM",
    difficulty: "Easy",
    code: "0290-word-pattern",
  },
  {
    neetcode250: !0,
    problem: "Design HashSet",
    pattern: "Arrays & Hashing",
    link: "design-hashset/",
    video: "VymjPQUXjL8",
    difficulty: "Easy",
    code: "0705-design-hashset",
  },
  {
    neetcode250: !0,
    problem: "Design HashMap",
    pattern: "Arrays & Hashing",
    link: "design-hashmap/",
    video: "cNWsgbKwwoU",
    difficulty: "Easy",
    code: "0706-design-hashmap",
  },
  {
    link: "monotonic-array",
    problem: "Monotonic Array",
    difficulty: "Easy",
    video: "sqWOFIZ9Z0U",
    pattern: "Arrays & Hashing",
    code: "0896-monotonic-array",
  },
  {
    link: "number-of-good-pairs",
    problem: "Number of Good Pairs",
    difficulty: "Easy",
    video: "BqhDFUo1rjs",
    pattern: "Arrays & Hashing",
    code: "1512-number-of-good-pairs",
  },
  {
    link: "pascals-triangle-ii",
    problem: "Pascal's Triangle II",
    difficulty: "Easy",
    video: "k1DNTyal77I",
    pattern: "Arrays & Hashing",
    code: "0119-pascals-triangle-ii",
  },
  {
    link: "find-words-that-can-be-formed-by-characters",
    problem: "Find Words That Can Be Formed by Characters",
    difficulty: "Easy",
    video: "EQ5jTZdEn8Y",
    pattern: "Arrays & Hashing",
    code: "1160-find-words-that-can-be-formed-by-characters",
  },
  {
    link: "largest-3-same-digit-number-in-string",
    problem: "Largest 3-Same-Digit Number in String",
    difficulty: "Easy",
    video: "vcrOpJQHsSE",
    pattern: "Arrays & Hashing",
    code: "2264-largest-3-same-digit-number-in-string",
  },
  {
    link: "destination-city",
    problem: "Destination City",
    difficulty: "Easy",
    video: "Hi8vMnnTZHE",
    pattern: "Arrays & Hashing",
    code: "1436-destination-city",
  },
  {
    link: "maximum-product-difference-between-two-pairs",
    problem: "Maximum Product Difference Between Two",
    difficulty: "Easy",
    video: "wBPoEm3r3EA",
    pattern: "Arrays & Hashing",
    code: "1913-maximum-product-difference-between-two-pairs",
  },
  {
    link: "maximum-score-after-splitting-a-string",
    problem: "Maximum Score After Splitting a String",
    difficulty: "Easy",
    video: "mc_eSStDrWw",
    pattern: "Arrays & Hashing",
    code: "1422-maximum-score-after-splitting-a-string",
  },
  {
    link: "path-crossing",
    problem: "Path Crossing",
    difficulty: "Easy",
    video: "VWRJBNP7uH8",
    pattern: "Arrays & Hashing",
    code: "1496-path-crossing",
  },
  {
    link: "minimum-changes-to-make-alternating-binary-string",
    problem: "Minimum Changes To Make Alternating Binary String",
    difficulty: "Easy",
    video: "9vAQdmVU2ds",
    pattern: "Arrays & Hashing",
    code: "1758-minimum-changes-to-make-alternating-binary-string",
  },
  {
    link: "redistribute-characters-to-make-all-strings-equal",
    problem: "Redistribute Characters to Make All Strings Equal",
    difficulty: "Easy",
    video: "a3SmUiimBi8",
    pattern: "Arrays & Hashing",
    code: "1897-redistribute-characters-to-make-all-strings-equal",
  },
  {
    link: "largest-substring-between-two-equal-characters",
    problem: "Largest Substring Between Two Equal Characters",
    difficulty: "Easy",
    video: "66b2V_rCuJw",
    pattern: "Arrays & Hashing",
    code: "1624-largest-substring-between-two-equal-characters",
  },
  {
    link: "set-mismatch",
    problem: "Set Mismatch",
    difficulty: "Easy",
    video: "d-ulaeRBA64",
    pattern: "Arrays & Hashing",
    code: "0645-set-mismatch",
  },
  {
    link: "first-unique-character-in-a-string",
    problem: "First Unique Character in a String",
    difficulty: "Easy",
    video: "rBENYgWy3xU",
    pattern: "Arrays & Hashing",
    code: "0387-first-unique-character-in-a-string",
  },
  {
    link: "intersection-of-two-arrays",
    problem: "Intersection of Two Arrays",
    difficulty: "Easy",
    video: "fwUTXaMom6U",
    pattern: "Arrays & Hashing",
    code: "0349-intersection-of-two-arrays",
  },
  {
    link: "number-of-students-unable-to-eat-lunch/",
    problem: "Number of Students Unable to Eat Lunch",
    difficulty: "Easy",
    video: "d_cvtFwnOZg",
    pattern: "Arrays & Hashing",
    code: "1700-number-of-students-unable-to-eat-lunch",
  },
  {
    link: "time-needed-to-buy-tickets",
    problem: "Time Needed to Buy Tickets",
    difficulty: "Easy",
    video: "cVmS9N6kf2Y",
    pattern: "Arrays & Hashing",
    code: "2073-time-needed-to-buy-tickets",
  },
  {
    link: "special-array-with-x-elements-greater-than-or-equal-x",
    problem: "Special Array with X Elements Greater than or Equal X",
    difficulty: "Easy",
    video: "Z51jYCeBLVI",
    pattern: "Arrays & Hashing",
    code: "1608-special-array-with-x-elements-greater-than-or-equal-x",
  },
  {
    neetcode250: !0,
    problem: "Sort an Array",
    pattern: "Arrays & Hashing",
    link: "sort-an-array/",
    video: "MsYZSinhuFo",
    difficulty: "Medium",
    code: "0912-sort-an-array",
  },
  {
    neetcode250: !0,
    problem: "Sort Colors",
    pattern: "Arrays & Hashing",
    link: "sort-colors/",
    video: "4xbWSRZHqac",
    difficulty: "Medium",
    code: "0075-sort-colors",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Top K Frequent Elements",
    pattern: "Arrays & Hashing",
    link: "top-k-frequent-elements/",
    ncLink: "top-k-elements-in-list/",
    video: "YPTqKIgVk-k",
    difficulty: "Medium",
    code: "0347-top-k-frequent-elements",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Encode and Decode Strings",
    premium: !0,
    ncLink: "string-encode-and-decode/",
    pattern: "Arrays & Hashing",
    link: "encode-and-decode-strings/",
    video: "B1k_sxOSgv8",
    difficulty: "Medium",
    code: "0271-encode-and-decode-strings",
  },
  {
    neetcode250: !0,
    problem: "Range Sum Query 2D Immutable",
    pattern: "Arrays & Hashing",
    link: "range-sum-query-2d-immutable/",
    video: "KE8MQuwE2yA",
    difficulty: "Medium",
    code: "0304-range-sum-query-2d-immutable",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Product of Array Except Self",
    pattern: "Arrays & Hashing",
    link: "product-of-array-except-self/",
    ncLink: "products-of-array-discluding-self/",
    video: "bNvIQI2wAjk",
    difficulty: "Medium",
    code: "0238-product-of-array-except-self",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Valid Sudoku",
    pattern: "Arrays & Hashing",
    link: "valid-sudoku/",
    ncLink: "valid-sudoku/",
    video: "TjFXEUCMqI8",
    difficulty: "Medium",
    code: "0036-valid-sudoku",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Longest Consecutive Sequence",
    pattern: "Arrays & Hashing",
    link: "longest-consecutive-sequence/",
    ncLink: "longest-consecutive-sequence/",
    video: "P6RZZMu_maU",
    difficulty: "Medium",
    code: "0128-longest-consecutive-sequence",
  },
  {
    problem: "Encode and Decode TinyURL",
    pattern: "Arrays & Hashing",
    link: "encode-and-decode-tinyurl/",
    video: "VyBOaboQLGc",
    difficulty: "Medium",
    code: "0535-encode-and-decode-tinyurl",
  },
  {
    problem: "Brick Wall",
    pattern: "Arrays & Hashing",
    link: "brick-wall/",
    video: "Kkmv2h48ekw",
    difficulty: "Medium",
    code: "0554-brick-wall",
  },
  {
    neetcode250: !0,
    problem: "Best Time to Buy And Sell Stock II",
    pattern: "Arrays & Hashing",
    link: "best-time-to-buy-and-sell-stock-ii/",
    video: "3SJ3pUkPQMc",
    difficulty: "Medium",
    code: "0122-best-time-to-buy-and-sell-stock-ii",
  },
  {
    neetcode250: !0,
    link: "majority-element-ii",
    problem: "Majority Element II",
    difficulty: "Medium",
    video: "Eua-UrQ_ANo",
    pattern: "Arrays & Hashing",
    code: "0229-majority-element-ii",
  },
  {
    neetcode250: !0,
    problem: "Subarray Sum Equals K",
    pattern: "Arrays & Hashing",
    link: "subarray-sum-equals-k/",
    video: "fFVZt-6sgyo",
    difficulty: "Medium",
    code: "0560-subarray-sum-equals-k",
  },
  {
    problem: "Unique Length 3 Palindromic Subsequences",
    pattern: "Arrays & Hashing",
    link: "unique-length-3-palindromic-subsequences/",
    video: "3THUt0vAFLU",
    difficulty: "Medium",
    code: "1930-unique-length-3-palindromic-subsequences",
  },
  {
    problem: "Minimum Number of Swaps to Make The String Balanced",
    pattern: "Arrays & Hashing",
    link: "minimum-number-of-swaps-to-make-the-string-balanced/",
    video: "3YDBT9ZrfaU",
    difficulty: "Medium",
    code: "1963-minimum-number-of-swaps-to-make-the-string-balanced",
  },
  {
    problem: "Number of Pairs of Interchangeable Rectangles",
    pattern: "Arrays & Hashing",
    link: "number-of-pairs-of-interchangeable-rectangles/",
    video: "lEQ8ZlLOuyQ",
    difficulty: "Medium",
    code: "2001-number-of-pairs-of-interchangeable-rectangles",
  },
  {
    problem: "Maximum Product of The Length of Two Palindromic Subsequences",
    pattern: "Arrays & Hashing",
    link: "maximum-product-of-the-length-of-two-palindromic-subsequences/",
    video: "aoHbYlO8vDg",
    difficulty: "Medium",
    code: "2002-maximum-product-of-the-length-of-two-palindromic-subsequences",
  },
  {
    problem: "Grid Game",
    pattern: "Arrays & Hashing",
    link: "grid-game/",
    video: "N4wDSOw65hI",
    difficulty: "Medium",
    code: "2017-grid-game",
  },
  {
    problem: "Find All Anagrams in a String",
    pattern: "Arrays & Hashing",
    link: "find-all-anagrams-in-a-string/",
    video: "G8xtZy0fDKg",
    difficulty: "Medium",
    code: "0438-find-all-anagrams-in-a-string",
  },
  {
    problem: "Find The Index of The First Occurrence in a String",
    pattern: "Arrays & Hashing",
    link: "find-the-index-of-the-first-occurrence-in-a-string/",
    video: "JoF0Z7nVSrA",
    difficulty: "Easy",
    code: "0028-find-the-index-of-the-first-occurrence-in-a-string",
  },
  {
    problem: "Wiggle Sort",
    pattern: "Arrays & Hashing",
    premium: !0,
    lintcodeLink: "https://www.lintcode.com/problem/508/",
    link: "wiggle-sort/",
    video: "vGsyTE4s34w",
    difficulty: "Medium",
    code: "0280-wiggle-sort",
  },
  {
    problem: "Largest Number",
    pattern: "Arrays & Hashing",
    link: "largest-number/",
    video: "WDx6Y4i4xJ8",
    difficulty: "Medium",
    code: "0179-largest-number",
  },
  {
    problem: "Continuous Subarray Sum",
    pattern: "Arrays & Hashing",
    link: "continuous-subarray-sum/",
    video: "OKcrLfR-8mE",
    difficulty: "Medium",
    code: "0523-continuous-subarray-sum",
  },
  {
    problem: "Push Dominoes",
    pattern: "Arrays & Hashing",
    link: "push-dominoes/",
    video: "evUFsOb_iLY",
    difficulty: "Medium",
    code: "0838-push-dominoes",
  },
  {
    problem: "Repeated DNA Sequences",
    pattern: "Arrays & Hashing",
    link: "repeated-dna-sequences/",
    video: "FzTYfsmtOso",
    difficulty: "Medium",
    code: "0187-repeated-dna-sequences",
  },
  {
    problem: "Insert Delete Get Random O(1)",
    pattern: "Arrays & Hashing",
    link: "insert-delete-getrandom-o1/",
    video: "j4KwhBziOpg",
    difficulty: "Medium",
    code: "0380-insert-delete-getrandom-o1",
  },
  {
    problem: "Check if a String Contains all Binary Codes of Size K",
    pattern: "Arrays & Hashing",
    link: "check-if-a-string-contains-all-binary-codes-of-size-k/",
    video: "qU32rTy_kOM",
    difficulty: "Medium",
    code: "1461-check-if-a-string-contains-all-binary-codes-of-size-k",
  },
  {
    problem: "Non Decreasing Array",
    pattern: "Arrays & Hashing",
    link: "non-decreasing-array/",
    video: "RegQckCegDk",
    difficulty: "Medium",
    code: "0665-non-decreasing-array",
  },
  {
    problem: "Sign of An Array",
    pattern: "Arrays & Hashing",
    link: "sign-of-the-product-of-an-array/",
    video: "ILDLM86jNow",
    difficulty: "Easy",
    code: "1822-sign-of-the-product-of-an-array",
  },
  {
    problem: "Find the Difference of Two Arrays",
    pattern: "Arrays & Hashing",
    link: "find-the-difference-of-two-arrays/",
    video: "a4wqKR-znBE",
    difficulty: "Easy",
    code: "2215-find-the-difference-of-two-arrays",
  },
  {
    problem: "Design Parking System",
    pattern: "Arrays & Hashing",
    link: "design-parking-system/",
    video: "d5zCHesOrSk",
    difficulty: "Easy",
    code: "1603-design-parking-system",
  },
  {
    problem: "Number of Zero-Filled Subarrays",
    pattern: "Arrays & Hashing",
    link: "number-of-zero-filled-subarrays/",
    video: "G-EWVGCcL_w",
    difficulty: "Medium",
    code: "2348-number-of-zero-filled-subarrays",
  },
  {
    problem: "Optimal Partition of String",
    pattern: "Arrays & Hashing",
    link: "optimal-partition-of-string/",
    video: "CKZPdiXiQf0",
    difficulty: "Medium",
    code: "2405-optimal-partition-of-string",
  },
  {
    problem: "Design Underground System",
    pattern: "Arrays & Hashing",
    link: "design-underground-system/",
    video: "W5QOLqXskZM",
    difficulty: "Medium",
    code: "1396-design-underground-system",
  },
  {
    problem: "Minimum Penalty for a Shop",
    pattern: "Arrays & Hashing",
    link: "minimum-penalty-for-a-shop/",
    video: "0d7ShRoOFVE",
    difficulty: "Medium",
    code: "2483-minimum-penalty-for-a-shop",
  },
  {
    link: "champagne-tower",
    problem: "Champagne Tower",
    difficulty: "Medium",
    video: "LQ8TuG_QADM",
    pattern: "Arrays & Hashing",
    code: "0799-champagne-tower",
  },
  {
    link: "sum-of-absolute-differences-in-a-sorted-array",
    problem: "Sum of Absolute Differences in a Sorted Array",
    difficulty: "Medium",
    video: "3nkc-e66JmA",
    pattern: "Arrays & Hashing",
    code: "1685-sum-of-absolute-differences-in-a-sorted-array",
  },
  {
    link: "design-a-food-rating-system",
    problem: "Design a Food Rating System",
    difficulty: "Medium",
    video: "Ikp8SgbgbEo",
    pattern: "Arrays & Hashing",
    code: "2353-design-a-food-rating-system",
  },
  {
    link: "convert-an-array-into-a-2d-array-with-conditions",
    problem: "Convert an Array Into a 2D Array With Conditions",
    difficulty: "Medium",
    video: "9pl1QiaGgmI",
    pattern: "Arrays & Hashing",
    code: "2610-convert-an-array-into-a-2d-array-with-conditions",
  },
  {
    link: "minimum-number-of-operations-to-make-array-empty",
    problem: "Minimum Numbers of Operations to Make Array Empty",
    difficulty: "Medium",
    video: "_AcO35R0fss",
    pattern: "Arrays & Hashing",
    code: "2870-minimum-number-of-operations-to-make-array-empty",
  },
  {
    link: "divide-array-into-arrays-with-max-difference",
    problem: "Divide Array Into Arrays With Max Difference",
    difficulty: "Medium",
    video: "XleOio1oJeo",
    pattern: "Arrays & Hashing",
    code: "2966-divide-array-into-arrays-with-max-difference",
  },
  {
    link: "sequential-digits",
    problem: "Sequential Digits",
    difficulty: "Medium",
    video: "Q-ca65wRJyI",
    pattern: "Arrays & Hashing",
    code: "1291-sequential-digits",
  },
  {
    link: "sort-characters-by-frequency",
    problem: "Sort Characters By Frequency",
    difficulty: "Medium",
    video: "OXdXc9HTrIg",
    pattern: "Arrays & Hashing",
    code: "0451-sort-characters-by-frequency",
  },
  {
    link: "find-polygon-with-the-largest-perimeter",
    problem: "Find Polygon with the Largest Perimeter",
    difficulty: "Medium",
    video: "Yk9Mor-Y488",
    pattern: "Arrays & Hashing",
    code: "2971-find-polygon-with-the-largest-perimeter",
  },
  {
    link: "minimum-remove-to-make-valid-parentheses",
    problem: "Minimum Remove to Make Valid Parentheses",
    difficulty: "Medium",
    video: "mgQ4O9iUEbg",
    pattern: "Arrays & Hashing",
    code: "1249-minimum-remove-to-make-valid-parentheses",
  },
  {
    link: "contiguous-array",
    problem: "Contiguous Array",
    difficulty: "Medium",
    video: "agB1LyObUNE",
    pattern: "Arrays & Hashing",
    code: "0525-contiguous-array",
  },
  {
    link: "find-all-duplicates-in-an-array",
    problem: "Find All Duplicates in an Array",
    difficulty: "Medium",
    video: "Y8x0iAVEITo",
    pattern: "Arrays & Hashing",
    code: "0442-find-all-duplicates-in-an-array",
  },
  {
    problem: "Text Justification",
    pattern: "Arrays & Hashing",
    link: "text-justification/",
    video: "TzMl4Z7pVh8",
    difficulty: "Hard",
    code: "0068-naming-a-company",
  },
  {
    problem: "Naming a Company",
    pattern: "Arrays & Hashing",
    link: "naming-a-company/",
    video: "NrHpgTScOcY",
    difficulty: "Hard",
    code: "2306-naming-a-company",
  },
  {
    link: "number-of-submatrices-that-sum-to-target",
    problem: "Number of Submatrices that Sum to Target",
    difficulty: "Hard",
    video: "43DRBP2DUHg",
    pattern: "Arrays & Hashing",
    code: "1074-number-of-submatrices-that-sum-to-target",
  },
  {
    neetcode250: !0,
    problem: "First Missing Positive",
    pattern: "Arrays & Hashing",
    link: "first-missing-positive/",
    video: "8g78yfzMlao",
    difficulty: "Hard",
    code: "0041-first-missing-positive",
  },
  {
    neetcode250: !0,
    problem: "Reverse String",
    pattern: "Two Pointers",
    link: "reverse-string/",
    video: "_d0T_2Lk2qA",
    difficulty: "Easy",
    code: "0344-reverse-string",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Valid Palindrome",
    pattern: "Two Pointers",
    link: "valid-palindrome/",
    ncLink: "is-palindrome/",
    video: "jJXJ16kPFWg",
    difficulty: "Easy",
    code: "0125-valid-palindrome",
  },
  {
    neetcode250: !0,
    problem: "Valid Palindrome II",
    pattern: "Two Pointers",
    link: "valid-palindrome-ii/",
    video: "JrxRYBwG6EI",
    difficulty: "Easy",
    code: "0680-valid-palindrome-ii",
  },
  {
    problem: "Minimum Difference Between Highest And Lowest of K Scores",
    pattern: "Two Pointers",
    link: "minimum-difference-between-highest-and-lowest-of-k-scores/",
    video: "JU5XdBZZtlk",
    difficulty: "Easy",
    code: "1984-minimum-difference-between-highest-and-lowest-of-k-scores",
  },
  {
    neetcode250: !0,
    problem: "Merge Strings Alternately",
    pattern: "Two Pointers",
    link: "merge-strings-alternately/",
    video: "LECWOvTo-Sc",
    difficulty: "Easy",
    code: "1768-merge-strings-alternately",
  },
  {
    neetcode250: !0,
    problem: "Merge Sorted Array",
    pattern: "Two Pointers",
    link: "merge-sorted-array/",
    video: "P1Ic85RarKY",
    difficulty: "Easy",
    code: "0088-merge-sorted-array",
  },
  {
    problem: "Move Zeroes",
    pattern: "Two Pointers",
    link: "move-zeroes/",
    video: "aayNRwUN3Do",
    difficulty: "Easy",
    code: "0283-move-zeroes",
  },
  {
    neetcode250: !0,
    problem: "Remove Duplicates From Sorted Array",
    pattern: "Two Pointers",
    link: "remove-duplicates-from-sorted-array/",
    video: "DEJAZBq0FDA",
    difficulty: "Easy",
    code: "0026-remove-duplicates-from-sorted-array",
  },
  {
    link: "assign-cookies",
    problem: "Assign Cookies",
    difficulty: "Easy",
    video: "JW8fgvoxPTg",
    pattern: "Two Pointers",
    code: "0455-assign-cookies",
  },
  {
    link: "find-first-palindromic-string-in-the-array",
    problem: "Find First Palindromic String in the Array",
    difficulty: "Easy",
    video: "4JA5MW772N0",
    pattern: "Two Pointers",
    code: "2108-find-first-palindromic-string-in-the-array",
  },
  {
    link: "sort-array-by-parity",
    problem: "Sort Array by Parity",
    difficulty: "Easy",
    video: "QC4c9fyr8As",
    pattern: "Two Pointers",
    code: "0905-sort-array-by-parity",
  },
  {
    link: "reverse-words-in-a-string-iii",
    problem: "Reverse Words in a String III",
    difficulty: "Easy",
    video: "7kUEwiwwnlA",
    pattern: "Two Pointers",
    code: "0557-reverse-words-in-a-string-iii",
  },
  {
    link: "backspace-string-compare",
    problem: "Backspace String Compare",
    difficulty: "Easy",
    video: "k2qrymM_DOo",
    pattern: "Two Pointers",
    code: "0844-backspace-string-compare",
  },
  {
    link: "check-if-two-string-arrays-are-equivalent",
    problem: "Check If Two String Arrays are Equivalent",
    difficulty: "Easy",
    video: "ejBwc2oE7ck",
    pattern: "Two Pointers",
    code: "1662-check-if-two-string-arrays-are-equivalent",
  },
  {
    problem: "Remove Duplicates From Sorted Array II",
    pattern: "Two Pointers",
    link: "remove-duplicates-from-sorted-array-ii/",
    video: "ycAq8iqh0TI",
    difficulty: "Medium",
    code: "0080-remove-duplicates-from-sorted-array-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Two Sum II Input Array Is Sorted",
    pattern: "Two Pointers",
    link: "two-sum-ii-input-array-is-sorted/",
    ncLink: "two-integer-sum-ii/",
    video: "cQ1Oz4ckceM",
    difficulty: "Medium",
    code: "0167-two-sum-ii-input-array-is-sorted",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "3Sum",
    pattern: "Two Pointers",
    link: "3sum/",
    ncLink: "three-integer-sum/",
    video: "jzZsG8n2R9A",
    difficulty: "Medium",
    code: "0015-3sum",
  },
  {
    neetcode250: !0,
    problem: "4Sum",
    pattern: "Two Pointers",
    link: "4sum/",
    video: "EYeR-_1NRlQ",
    difficulty: "Medium",
    code: "0018-4sum",
  },
  {
    neetcode250: !0,
    problem: "Rotate Array",
    pattern: "Two Pointers",
    link: "rotate-array/",
    video: "BHr381Guz3Y",
    difficulty: "Medium",
    code: "0189-rotate-array",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Container With Most Water",
    pattern: "Two Pointers",
    link: "container-with-most-water/",
    ncLink: "max-water-container/",
    video: "UuiTKBwPgAo",
    difficulty: "Medium",
    code: "0011-container-with-most-water",
  },
  {
    problem: "Number of Subsequences That Satisfy The Given Sum Condition",
    pattern: "Two Pointers",
    link: "number-of-subsequences-that-satisfy-the-given-sum-condition/",
    video: "xCsIkPLS4Ls",
    difficulty: "Medium",
    code: "1498-number-of-subsequences-that-satisfy-the-given-sum-condition",
  },
  {
    problem: "Array With Elements Not Equal to Average of Neighbors",
    pattern: "Two Pointers",
    link: "array-with-elements-not-equal-to-average-of-neighbors/",
    video: "Wmb3YdVYfqM",
    difficulty: "Medium",
    code: "1968-array-with-elements-not-equal-to-average-of-neighbors",
  },
  {
    neetcode250: !0,
    problem: "Boats to Save People",
    pattern: "Two Pointers",
    link: "boats-to-save-people/",
    video: "XbaxWuHIWUs",
    difficulty: "Medium",
    code: "0881-boats-to-save-people",
  },
  {
    link: "k-th-symbol-in-grammar",
    problem: "K-th Symbol in Grammar",
    difficulty: "Medium",
    video: "pmD2HCKaqRQ",
    pattern: "Two Pointers",
    code: "0779-k-th-symbol-in-grammar",
  },
  {
    link: "minimum-time-to-make-rope-colorful",
    problem: "Minimum Time To Make Rope Colorful",
    difficulty: "Medium",
    video: "9_9jwd2DHMU",
    pattern: "Two Pointers",
    code: "1578-minimum-time-to-make-rope-colorful",
  },
  {
    link: "rearrange-array-elements-by-sign",
    problem: "Rearrange Array Elements by Sign",
    difficulty: "Medium",
    video: "SoPmcGzz9-E",
    pattern: "Two Pointers",
    code: "2149-rearrange-array-elements-by-sign",
  },
  {
    link: "bag-of-tokens",
    problem: "Bag of Tokens",
    difficulty: "Medium",
    video: "prI82maTivg",
    pattern: "Two Pointers",
    code: "0948-bag-of-tokens",
  },
  {
    link: "minimum-length-of-string-after-deleting-similar-ends",
    problem: "Minimum Length of String after Deleting Similar Ends",
    difficulty: "Medium",
    video: "318hrWVr_5U",
    pattern: "Two Pointers",
    code: "1750-minimum-length-of-string-after-deleting-similar-ends",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Trapping Rain Water",
    pattern: "Two Pointers",
    link: "trapping-rain-water/",
    ncLink: "trapping-rain-water/",
    video: "ZI2z5pq0TqA",
    difficulty: "Hard",
    code: "0042-trapping-rain-water",
  },
  {
    neetcode250: !0,
    problem: "Contains Duplicate II",
    pattern: "Sliding Window",
    link: "contains-duplicate-ii/",
    video: "ypn0aZ0nrL4",
    difficulty: "Easy",
    code: "0219-contains-duplicate-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Best Time to Buy And Sell Stock",
    pattern: "Sliding Window",
    link: "best-time-to-buy-and-sell-stock/",
    ncLink: "buy-and-sell-crypto/",
    video: "1pkOgXD63yU",
    difficulty: "Easy",
    code: "0121-best-time-to-buy-and-sell-stock",
  },
  {
    problem:
      "Number of Sub Arrays of Size K and Avg Greater than or Equal to Threshold",
    pattern: "Sliding Window",
    link: "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/",
    video: "D8B4tKxMTnY",
    difficulty: "Medium",
    code: "1343-number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Longest Substring Without Repeating Characters",
    pattern: "Sliding Window",
    link: "longest-substring-without-repeating-characters/",
    ncLink: "longest-substring-without-duplicates/",
    video: "wiGpQwVHdE0",
    difficulty: "Medium",
    code: "0003-longest-substring-without-repeating-characters",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Longest Repeating Character Replacement",
    pattern: "Sliding Window",
    link: "longest-repeating-character-replacement/",
    ncLink: "longest-repeating-substring-with-replacement/",
    video: "gqXU1UyA8pk",
    difficulty: "Medium",
    code: "0424-longest-repeating-character-replacement",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Permutation In String",
    pattern: "Sliding Window",
    link: "permutation-in-string/",
    ncLink: "permutation-string/",
    video: "UbyhOgBN834",
    difficulty: "Medium",
    code: "0567-permutation-in-string",
  },
  {
    problem: "Frequency of The Most Frequent Element",
    pattern: "Sliding Window",
    link: "frequency-of-the-most-frequent-element/",
    video: "vgBrQ0NM5vE",
    difficulty: "Medium",
    code: "1838-frequency-of-the-most-frequent-element",
  },
  {
    problem: "Fruits into Basket",
    pattern: "Sliding Window",
    link: "fruit-into-baskets/",
    video: "yYtaV0G3mWQ",
    difficulty: "Medium",
    code: "0904-fruit-into-baskets",
  },
  {
    problem: "Maximum Number of Vowels in a Substring of Given Length",
    pattern: "Sliding Window",
    link: "maximum-number-of-vowels-in-a-substring-of-given-length/",
    video: "kEfPSzgL-Ss",
    difficulty: "Medium",
    code: "1456-maximum-number-of-vowels-in-a-substring-of-given-length",
  },
  {
    problem: "Minimum Number of Flips to Make The Binary String Alternating",
    pattern: "Sliding Window",
    link: "minimum-number-of-flips-to-make-the-binary-string-alternating/",
    video: "MOeuK6gaC2A",
    difficulty: "Medium",
    code: "1888-minimum-number-of-flips-to-make-the-binary-string-alternating",
  },
  {
    neetcode250: !0,
    problem: "Minimum Size Subarray Sum",
    pattern: "Sliding Window",
    link: "minimum-size-subarray-sum/",
    video: "aYqYMIqZx5s",
    difficulty: "Medium",
    code: "0209-minimum-size-subarray-sum",
  },
  {
    neetcode250: !0,
    problem: "Find K Closest Elements",
    pattern: "Sliding Window",
    link: "find-k-closest-elements/",
    video: "o-YDQzHoaKM",
    difficulty: "Medium",
    code: "0658-find-k-closest-elements",
  },
  {
    problem: "Minimum Operations to Reduce X to Zero",
    pattern: "Sliding Window",
    link: "minimum-operations-to-reduce-x-to-zero/",
    video: "xumn16n7njs",
    difficulty: "Medium",
    code: "1658-minimum-operations-to-reduce-x-to-zero",
  },
  {
    link: "get-equal-substrings-within-budget",
    problem: "Get Equal Substrings Within Budget",
    difficulty: "Medium",
    video: "3lsT1Le526U",
    pattern: "Sliding Window",
    code: "1208-get-equal-substrings-within-budget",
  },
  {
    link: "binary-subarrays-with-sum",
    problem: "Binary Subarrays with Sum",
    difficulty: "Medium",
    video: "j4JDr4-jvo4",
    pattern: "Sliding Window",
    code: "0930-binary-subarrays-with-sum",
  },
  {
    link: "subarray-product-less-than-k",
    problem: "Subarray Product Less Than K",
    difficulty: "Medium",
    video: "Cg6_nF7YIks",
    pattern: "Sliding Window",
    code: "0713-subarray-product-less-than-k",
  },
  {
    link: "length-of-longest-subarray-with-at-most-k-frequency",
    problem: "Length of Longest Subarray With at Most K Frequency",
    difficulty: "Medium",
    video: "W_KYZGp2QzU",
    pattern: "Sliding Window",
    code: "2958-length-of-longest-subarray-with-at-most-k-frequency",
  },
  {
    link: "count-subarrays-where-max-element-appears-at-least-k-times",
    problem: "Count Subarrays Where Max Element Appears at Least K Times",
    difficulty: "Medium",
    video: "CZ-z1ViskzE",
    pattern: "Sliding Window",
    code: "2962-count-subarrays-where-max-element-appears-at-least-k-times",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Minimum Window Substring",
    pattern: "Sliding Window",
    link: "minimum-window-substring/",
    ncLink: "minimum-window-with-characters/",
    video: "jSto0O4AJbM",
    difficulty: "Hard",
    code: "0076-minimum-window-substring",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Sliding Window Maximum",
    pattern: "Sliding Window",
    link: "sliding-window-maximum/",
    ncLink: "sliding-window-maximum/",
    video: "DfljaUwZsOk",
    difficulty: "Hard",
    code: "0239-sliding-window-maximum",
  },
  {
    link: "subarrays-with-k-different-integers",
    problem: "Subarrays with K Different Integers",
    difficulty: "Hard",
    video: "etI6HqWVa8U",
    pattern: "Sliding Window",
    code: "0992-subarrays-with-k-different-integers",
  },
  {
    link: "minimum-number-of-operations-to-make-array-continuous",
    problem: "Minimum Number of Operations to Make Array Continuous",
    difficulty: "Hard",
    video: "Dd-yJylrcOY",
    pattern: "Sliding Window",
    code: "2009-minimum-number-of-operations-to-make-array-continuous",
  },
  {
    neetcode250: !0,
    problem: "Baseball Game",
    pattern: "Stack",
    link: "baseball-game/",
    video: "Id_tqGdsZQI",
    difficulty: "Easy",
    code: "0682-baseball-game",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Valid Parentheses",
    pattern: "Stack",
    link: "valid-parentheses/",
    ncLink: "validate-parentheses/",
    video: "WTzjTskDFMg",
    difficulty: "Easy",
    code: "0020-valid-parentheses",
  },
  {
    neetcode250: !0,
    problem: "Implement Stack Using Queues",
    pattern: "Stack",
    link: "implement-stack-using-queues/",
    video: "rW4vm0-DLYc",
    difficulty: "Easy",
    code: "0225-implement-stack-using-queues",
  },
  {
    neetcode250: !0,
    link: "implement-queue-using-stacks",
    problem: "Implement Queue using Stacks",
    difficulty: "Easy",
    video: "eanwa3ht3YQ",
    pattern: "Stack",
    code: "0232-implement-queue-using-stacks",
  },
  {
    link: "make-the-string-great",
    problem: "Make The String Great",
    difficulty: "Easy",
    video: "10tBWNjzvtw",
    pattern: "Stack",
    code: "1544-make-the-string-great",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Min Stack",
    pattern: "Stack",
    link: "min-stack/",
    ncLink: "minimum-stack/",
    video: "qkLl7nAwDPo",
    difficulty: "Medium",
    code: "0155-min-stack",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Evaluate Reverse Polish Notation",
    pattern: "Stack",
    link: "evaluate-reverse-polish-notation/",
    ncLink: "evaluate-reverse-polish-notation/",
    video: "iu0082c4HDE",
    difficulty: "Medium",
    code: "0150-evaluate-reverse-polish-notation",
  },
  {
    problem: "Removing Stars From a String",
    pattern: "Stack",
    link: "removing-stars-from-a-string/",
    video: "pRyFZIaKegA",
    difficulty: "Medium",
    code: "2390-removing-stars-from-a-string",
  },
  {
    problem: "Validate Stack Sequences",
    pattern: "Stack",
    link: "validate-stack-sequences/",
    video: "mzua0r94kb8",
    difficulty: "Medium",
    code: "0946-validate-stack-sequences",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Generate Parentheses",
    pattern: "Stack",
    link: "generate-parentheses/",
    ncLink: "generate-parentheses/",
    video: "s9fokUqJ76A",
    difficulty: "Medium",
    code: "0022-generate-parentheses",
  },
  {
    neetcode250: !0,
    problem: "Asteroid Collision",
    pattern: "Stack",
    link: "asteroid-collision/",
    video: "LN7KjRszjk4",
    difficulty: "Medium",
    code: "0735-asteroid-collision",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Daily Temperatures",
    pattern: "Stack",
    link: "daily-temperatures/",
    ncLink: "daily-temperatures/",
    video: "cTBiBSnjO3c",
    difficulty: "Medium",
    code: "0739-daily-temperatures",
  },
  {
    neetcode250: !0,
    problem: "Online Stock Span",
    pattern: "Stack",
    link: "online-stock-span/",
    video: "slYh0ZNEqSw",
    difficulty: "Medium",
    code: "0901-online-stock-span",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Car Fleet",
    pattern: "Stack",
    link: "car-fleet/",
    ncLink: "car-fleet/",
    video: "Pr6T-3yB9RM",
    difficulty: "Medium",
    code: "0853-car-fleet",
  },
  {
    neetcode250: !0,
    problem: "Simplify Path",
    pattern: "Stack",
    link: "simplify-path/",
    video: "qYlHrAKJfyA",
    difficulty: "Medium",
    code: "0071-simplify-path",
  },
  {
    neetcode250: !0,
    problem: "Decode String",
    pattern: "Stack",
    link: "decode-string/",
    video: "qB0zZpBJlh8",
    difficulty: "Medium",
    code: "0394-decode-string",
  },
  {
    problem: "Remove K Digits",
    pattern: "Stack",
    link: "remove-k-digits/",
    video: "cFabMOnJaq0",
    difficulty: "Medium",
    code: "0402-remove-k-digits",
  },
  {
    problem: "Remove All Adjacent Duplicates In String II",
    pattern: "Stack",
    link: "remove-all-adjacent-duplicates-in-string-ii/",
    video: "w6LcypDgC4w",
    difficulty: "Medium",
    code: "1209-remove-all-adjacent-duplicates-in-string-ii",
  },
  {
    problem: "132 Pattern",
    pattern: "Stack",
    link: "132-pattern/",
    video: "q5ANAl8Z458",
    difficulty: "Medium",
    code: "0456-132-pattern",
  },
  {
    link: "flatten-nested-list-iterator",
    problem: "Flatten Nested List Iterator",
    difficulty: "Medium",
    video: "4ILiBgLokM8",
    pattern: "Stack",
    code: "0341-flatten-nested-list-iterator",
  },
  {
    link: "sum-of-subarray-minimums",
    problem: "Sum of Subarray Minimums",
    difficulty: "Medium",
    video: "aX1F2-DrBkQ",
    pattern: "Stack",
    code: "0907-sum-of-subarray-minimums",
  },
  {
    neetcode250: !0,
    problem: "Maximum Frequency Stack",
    pattern: "Stack",
    link: "maximum-frequency-stack/",
    video: "Z6idIicFDOE",
    difficulty: "Hard",
    code: "0895-maximum-frequency-stack",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Largest Rectangle In Histogram",
    pattern: "Stack",
    link: "largest-rectangle-in-histogram/",
    ncLink: "largest-rectangle-in-histogram/",
    video: "zx5Sw9130L0",
    difficulty: "Hard",
    code: "0084-largest-rectangle-in-histogram",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Binary Search",
    pattern: "Binary Search",
    link: "binary-search/",
    ncLink: "binary-search/",
    video: "s4DPM8ct1pI",
    difficulty: "Easy",
    code: "0704-binary-search",
  },
  {
    neetcode250: !0,
    problem: "Search Insert Position",
    pattern: "Binary Search",
    link: "search-insert-position/",
    video: "K-RYzDZkzCI",
    difficulty: "Easy",
    code: "0035-search-insert-position",
  },
  {
    neetcode250: !0,
    problem: "Guess Number Higher Or Lower",
    pattern: "Binary Search",
    link: "guess-number-higher-or-lower/",
    video: "xW4QsTtaCa4",
    difficulty: "Easy",
    code: "0374-guess-number-higher-or-lower",
  },
  {
    problem: "Arranging Coins",
    pattern: "Binary Search",
    link: "arranging-coins/",
    video: "5rHz_6s2Buw",
    difficulty: "Easy",
    code: "0441-arranging-coins",
  },
  {
    problem: "Squares of a Sorted Array",
    pattern: "Binary Search",
    link: "squares-of-a-sorted-array/",
    video: "FPCZsG_AkUg",
    difficulty: "Easy",
    code: "0977-squares-of-a-sorted-array",
  },
  {
    problem: "Valid Perfect Square",
    pattern: "Binary Search",
    link: "valid-perfect-square/",
    video: "Cg_wWPHJ2Sk",
    difficulty: "Easy",
    code: "0367-valid-perfect-square",
  },
  {
    neetcode250: !0,
    problem: "Sqrt(x) ",
    pattern: "Binary Search",
    link: "sqrtx/",
    video: "zdMhGxRWutQ",
    difficulty: "Easy",
    code: "0069-sqrtx",
  },
  {
    problem: "Single Element in a Sorted Array",
    pattern: "Binary Search",
    link: "single-element-in-a-sorted-array/",
    video: "HGtqdzyUJ3k",
    difficulty: "Medium",
    code: "0540-single-element-in-a-sorted-array",
  },
  {
    problem: "Find Peak Element",
    pattern: "Binary Search",
    link: "find-peak-element/",
    video: "kMzJy9es7Hc",
    difficulty: "Medium",
    code: "0162-find-peak-element",
  },
  {
    problem: "Successful Pairs of Spells and Potions",
    pattern: "Binary Search",
    link: "successful-pairs-of-spells-and-potions/",
    video: "OKnm5oyAhWg",
    difficulty: "Medium",
    code: "2300-successful-pairs-of-spells-and-potions",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Search a 2D Matrix",
    pattern: "Binary Search",
    link: "search-a-2d-matrix/",
    ncLink: "search-2d-matrix/",
    video: "Ber2pi2C0j0",
    difficulty: "Medium",
    code: "0074-search-a-2d-matrix",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Koko Eating Bananas",
    pattern: "Binary Search",
    link: "koko-eating-bananas/",
    ncLink: "eating-bananas/",
    video: "U2SozAs9RzA",
    difficulty: "Medium",
    code: "0875-koko-eating-bananas",
  },
  {
    neetcode250: !0,
    problem: "Capacity to Ship Packages",
    pattern: "Binary Search",
    link: "capacity-to-ship-packages-within-d-days/",
    video: "ER_oLmdc-nw",
    difficulty: "Medium",
    code: "1011-capacity-to-ship-packages-within-d-days",
  },
  {
    problem: "Minimize the Maximum Difference of Pairs",
    pattern: "Binary Search",
    link: "minimize-the-maximum-difference-of-pairs/",
    video: "lf1Pxg7IrzQ",
    difficulty: "Medium",
    code: "2616-minimize-the-maximum-difference-of-pairs",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Find Minimum In Rotated Sorted Array",
    pattern: "Binary Search",
    link: "find-minimum-in-rotated-sorted-array/",
    ncLink: "find-minimum-in-rotated-sorted-array/",
    video: "nIVW4P8b1VA",
    difficulty: "Medium",
    code: "0153-find-minimum-in-rotated-sorted-array",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Search In Rotated Sorted Array",
    pattern: "Binary Search",
    link: "search-in-rotated-sorted-array/",
    ncLink: "find-target-in-rotated-sorted-array/",
    video: "U8XENwh8Oy8",
    difficulty: "Medium",
    code: "0033-search-in-rotated-sorted-array",
  },
  {
    neetcode250: !0,
    problem: "Search In Rotated Sorted Array II",
    pattern: "Binary Search",
    link: "search-in-rotated-sorted-array-ii/",
    video: "oUnF7o88_Xc",
    difficulty: "Medium",
    code: "0081-search-in-rotated-sorted-array-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Time Based Key Value Store",
    pattern: "Binary Search",
    link: "time-based-key-value-store/",
    ncLink: "time-based-key-value-store/",
    video: "fu2cD_6E8Hw",
    difficulty: "Medium",
    code: "0981-time-based-key-value-store",
  },
  {
    problem: "Find First And Last Position of Element In Sorted Array",
    pattern: "Binary Search",
    link: "find-first-and-last-position-of-element-in-sorted-array/",
    video: "4sQL7R5ySUU",
    difficulty: "Medium",
    code: "0034-find-first-and-last-position-of-element-in-sorted-array",
  },
  {
    problem: "Maximum Number of Removable Characters",
    pattern: "Binary Search",
    link: "maximum-number-of-removable-characters/",
    video: "NMP3nRPyX5g",
    difficulty: "Medium",
    code: "1898-maximum-number-of-removable-characters",
  },
  {
    problem: "Populating Next Right Pointers In Each Node",
    pattern: "Binary Search",
    link: "populating-next-right-pointers-in-each-node/",
    video: "U4hFQCa1Cq0",
    difficulty: "Medium",
    code: "0116-populating-next-right-pointers-in-each-node",
  },
  {
    problem: "Search Suggestions System",
    pattern: "Binary Search",
    link: "search-suggestions-system/",
    video: "D4T2N0yAr20",
    difficulty: "Medium",
    code: "1268-search-suggestions-system",
  },
  {
    neetcode250: !0,
    problem: "Split Array Largest Sum",
    pattern: "Binary Search",
    link: "split-array-largest-sum/",
    video: "YUF3_eBdzsk",
    difficulty: "Hard",
    code: "0410-split-array-largest-sum",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Median of Two Sorted Arrays",
    pattern: "Binary Search",
    link: "median-of-two-sorted-arrays/",
    ncLink: "median-of-two-sorted-arrays/",
    video: "q6IEA26hvXc",
    difficulty: "Hard",
    code: "0004-median-of-two-sorted-arrays",
  },
  {
    neetcode250: !0,
    link: "find-in-mountain-array",
    problem: "Find in Mountain Array",
    difficulty: "Hard",
    video: "BGgYC-YkGvc",
    pattern: "Binary Search",
    code: "1095-find-in-mountain-array",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Reverse Linked List",
    pattern: "Linked List",
    link: "reverse-linked-list/",
    ncLink: "reverse-a-linked-list/",
    video: "G0_I-ZF0S38",
    difficulty: "Easy",
    code: "0206-reverse-linked-list",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Merge Two Sorted Lists",
    pattern: "Linked List",
    link: "merge-two-sorted-lists/",
    ncLink: "merge-two-sorted-linked-lists/",
    video: "XIdigk956u0",
    difficulty: "Easy",
    code: "0021-merge-two-sorted-lists",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Linked List Cycle",
    pattern: "Linked List",
    link: "linked-list-cycle/",
    ncLink: "linked-list-cycle-detection/",
    video: "gBTe7lFR3vc",
    difficulty: "Easy",
    code: "0141-linked-list-cycle",
  },
  {
    problem: "Palindrome Linked List",
    pattern: "Linked List",
    link: "palindrome-linked-list/",
    video: "yOzXms1J6Nk",
    difficulty: "Easy",
    code: "0234-palindrome-linked-list",
  },
  {
    problem: "Remove Linked List Elements",
    pattern: "Linked List",
    link: "remove-linked-list-elements/",
    video: "JI71sxtHTng",
    difficulty: "Easy",
    code: "0203-remove-linked-list-elements",
  },
  {
    problem: "Remove Duplicates From Sorted List",
    pattern: "Linked List",
    link: "remove-duplicates-from-sorted-list/",
    video: "p10f-VpO4nE",
    difficulty: "Easy",
    code: "0083-remove-duplicates-from-sorted-list",
  },
  {
    problem: "Middle of the Linked List",
    pattern: "Linked List",
    link: "middle-of-the-linked-list/",
    video: "A2_ldqM4QcY",
    difficulty: "Easy",
    code: "0876-middle-of-the-linked-list",
  },
  {
    problem: "Intersection of Two Linked Lists",
    pattern: "Linked List",
    link: "intersection-of-two-linked-lists/",
    video: "D0X0BONOQhI",
    difficulty: "Easy",
    code: "0160-intersection-of-two-linked-lists",
  },
  {
    link: "merge-in-between-linked-lists",
    problem: "Merge in Between Linked Lists",
    difficulty: "Medium",
    video: "pI775VutBxg",
    pattern: "Linked List",
    code: "1669-merge-in-between-linked-lists",
  },
  {
    link: "remove-nodes-from-linked-list",
    problem: "Remove Nodes From Linked List",
    difficulty: "Medium",
    video: "y783sRTezDg",
    pattern: "Linked List",
    code: "2487-remove-nodes-from-linked-list",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Reorder List",
    pattern: "Linked List",
    link: "reorder-list/",
    ncLink: "reorder-linked-list/",
    video: "S5bfdUTrKLM",
    difficulty: "Medium",
    code: "0143-reorder-list",
  },
  {
    problem: "Maximum Twin Sum Of A Linked List",
    pattern: "Linked List",
    link: "maximum-twin-sum-of-a-linked-list/",
    video: "doj95MelfSA",
    difficulty: "Medium",
    code: "2130-maximum-twin-sum-of-a-linked-list",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Remove Nth Node From End of List",
    pattern: "Linked List",
    link: "remove-nth-node-from-end-of-list/",
    ncLink: "remove-node-from-end-of-linked-list/",
    video: "XVuQxVej6y8",
    difficulty: "Medium",
    code: "0019-remove-nth-node-from-end-of-list",
  },
  {
    problem: "Swapping Nodes in a Linked List",
    pattern: "Linked List",
    link: "swapping-nodes-in-a-linked-list/",
    video: "4LsrgMyQIjQ",
    difficulty: "Medium",
    code: "1721-swapping-nodes-in-a-linked-list",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Copy List With Random Pointer",
    pattern: "Linked List",
    link: "copy-list-with-random-pointer/",
    ncLink: "copy-linked-list-with-random-pointer/",
    video: "5Y2EiZST97Y",
    difficulty: "Medium",
    code: "0138-copy-list-with-random-pointer",
  },
  {
    problem: "Design Linked List",
    pattern: "Linked List",
    link: "design-linked-list/",
    video: "Wf4QhpdVFQo",
    difficulty: "Medium",
    code: "0707-design-linked-list",
  },
  {
    problem: "Design Browser History",
    pattern: "Linked List",
    link: "design-browser-history/",
    video: "i1G-kKnBu8k",
    difficulty: "Medium",
    code: "1472-design-browser-history",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Add Two Numbers",
    pattern: "Linked List",
    link: "add-two-numbers/",
    ncLink: "add-two-numbers/",
    video: "wgFPrzTjm7s",
    difficulty: "Medium",
    code: "0002-add-two-numbers",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Find The Duplicate Number",
    pattern: "Linked List",
    link: "find-the-duplicate-number/",
    ncLink: "find-duplicate-integer/",
    video: "wjYnzkAhcNk",
    difficulty: "Medium",
    code: "0287-find-the-duplicate-number",
  },
  {
    problem: "Swap Nodes In Pairs",
    pattern: "Linked List",
    link: "swap-nodes-in-pairs/",
    video: "o811TZLAWOo",
    difficulty: "Medium",
    code: "0024-swap-nodes-in-pairs",
  },
  {
    problem: "Sort List",
    pattern: "Linked List",
    link: "sort-list/",
    video: "TGveA1oFhrc",
    difficulty: "Medium",
    code: "0148-sort-list",
  },
  {
    problem: "Partition List",
    pattern: "Linked List",
    link: "partition-list/",
    video: "KT1iUciJr4g",
    difficulty: "Medium",
    code: "0086-partition-list",
  },
  {
    problem: "Rotate List",
    pattern: "Linked List",
    link: "rotate-list/",
    video: "UcGtPs2LE_c",
    difficulty: "Medium",
    code: "0061-rotate-list",
  },
  {
    neetcode250: !0,
    problem: "Reverse Linked List II",
    pattern: "Linked List",
    link: "reverse-linked-list-ii/",
    video: "RF_M9tX4Eag",
    difficulty: "Medium",
    code: "0092-reverse-linked-list-ii",
  },
  {
    neetcode250: !0,
    problem: "Design Circular Queue",
    pattern: "Linked List",
    link: "design-circular-queue/",
    video: "aBbsfn863oA",
    difficulty: "Medium",
    code: "0622-design-circular-queue",
  },
  {
    problem: "Insertion Sort List",
    pattern: "Linked List",
    link: "insertion-sort-list/",
    video: "Kk6mXAzqX3Y",
    difficulty: "Medium",
    code: "0147-insertion-sort-list",
  },
  {
    problem: "Split Linked List in Parts",
    pattern: "Linked List",
    link: "split-linked-list-in-parts/",
    video: "-OTlqdrxrVI",
    difficulty: "Medium",
    code: "0725-split-linked-list-in-parts",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "LRU Cache",
    pattern: "Linked List",
    link: "lru-cache/",
    ncLink: "lru-cache/",
    video: "7ABFKPK2hD4",
    difficulty: "Medium",
    code: "0146-lru-cache",
  },
  {
    neetcode250: !0,
    problem: "LFU Cache",
    pattern: "Linked List",
    link: "lfu-cache/",
    video: "bLEIHn-DgoA",
    difficulty: "Hard",
    code: "0460-lfu-cache",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Merge K Sorted Lists",
    pattern: "Linked List",
    link: "merge-k-sorted-lists/",
    ncLink: "merge-k-sorted-linked-lists/",
    video: "q5a5OiGbT6Q",
    difficulty: "Hard",
    code: "0023-merge-k-sorted-lists",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Reverse Nodes In K Group",
    pattern: "Linked List",
    link: "reverse-nodes-in-k-group/",
    ncLink: "reverse-nodes-in-k-group/",
    video: "1UOPsfP85V4",
    difficulty: "Hard",
    code: "0025-reverse-nodes-in-k-group",
  },
  {
    neetcode250: !0,
    problem: "Binary Tree Inorder Traversal",
    pattern: "Trees",
    link: "binary-tree-inorder-traversal/",
    video: "g_S5WuasWUE",
    difficulty: "Easy",
    code: "0094-binary-tree-inorder-traversal",
  },
  {
    neetcode250: !0,
    problem: "Binary Tree Preorder Traversal",
    pattern: "Trees",
    link: "binary-tree-preorder-traversal/",
    video: "afTpieEZXck",
    difficulty: "Easy",
    code: "0144-binary-tree-preorder-traversal",
  },
  {
    neetcode250: !0,
    problem: "Binary Tree Postorder Traversal",
    pattern: "Trees",
    link: "binary-tree-postorder-traversal/",
    video: "QhszUQhGGlA",
    difficulty: "Easy",
    code: "0145-binary-tree-postorder-traversal",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Invert Binary Tree",
    pattern: "Trees",
    link: "invert-binary-tree/",
    ncLink: "invert-a-binary-tree/",
    video: "OnSn2XEQ4MY",
    difficulty: "Easy",
    code: "0226-invert-binary-tree",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Maximum Depth of Binary Tree",
    pattern: "Trees",
    link: "maximum-depth-of-binary-tree/",
    ncLink: "depth-of-binary-tree/",
    video: "hTM3phVI6YQ",
    difficulty: "Easy",
    code: "0104-maximum-depth-of-binary-tree",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Diameter of Binary Tree",
    pattern: "Trees",
    link: "diameter-of-binary-tree/",
    ncLink: "binary-tree-diameter/",
    video: "K81C31ytOZE",
    difficulty: "Easy",
    code: "0543-diameter-of-binary-tree",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Balanced Binary Tree",
    pattern: "Trees",
    link: "balanced-binary-tree/",
    ncLink: "balanced-binary-tree/",
    video: "QfJsau0ItOY",
    difficulty: "Easy",
    code: "0110-balanced-binary-tree",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Same Tree",
    pattern: "Trees",
    link: "same-tree/",
    ncLink: "same-binary-tree/",
    video: "vRbbcKXCxOw",
    difficulty: "Easy",
    code: "0100-same-tree",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Subtree of Another Tree",
    pattern: "Trees",
    link: "subtree-of-another-tree/",
    ncLink: "subtree-of-a-binary-tree/",
    video: "E36O5SWp-LE",
    difficulty: "Easy",
    code: "0572-subtree-of-another-tree",
  },
  {
    problem: "Convert Sorted Array to Binary Search Tree",
    pattern: "Trees",
    link: "convert-sorted-array-to-binary-search-tree/",
    video: "0K0uCMYq5ng",
    difficulty: "Easy",
    code: "0108-convert-sorted-array-to-binary-search-tree",
  },
  {
    problem: "Merge Two Binary Trees",
    pattern: "Trees",
    link: "merge-two-binary-trees/",
    video: "QHH6rIK3dDQ",
    difficulty: "Easy",
    code: "0617-merge-two-binary-trees",
  },
  {
    problem: "Path Sum",
    pattern: "Trees",
    link: "path-sum/",
    video: "LSKQyOz_P8I",
    difficulty: "Easy",
    code: "0112-path-sum",
  },
  {
    link: "range-sum-of-bst",
    problem: "Range Sum of BST",
    difficulty: "Easy",
    video: "uLVG45n4Sbg",
    pattern: "Trees",
    code: "0938-range-sum-of-bst",
  },
  {
    link: "leaf-similar-trees",
    problem: "Leaf-Similar Trees",
    difficulty: "Easy",
    video: "Nr8dbnL0_cM",
    pattern: "Trees",
    code: "0872-leaf-similar-trees",
  },
  {
    link: "evaluate-boolean-binary-tree",
    problem: "Evaluate Boolean Binary Tree",
    difficulty: "Easy",
    video: "9a_cP54jn8Q",
    pattern: "Trees",
    code: "2331-evaluate-boolean-binary-tree",
  },
  {
    problem: "Construct String From Binary Tree",
    pattern: "Trees",
    link: "construct-string-from-binary-tree/",
    video: "b1WpYxnuebQ",
    difficulty: "Medium",
    code: "0606-construct-string-from-binary-tree",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Lowest Common Ancestor of a Binary Search Tree",
    pattern: "Trees",
    link: "lowest-common-ancestor-of-a-binary-search-tree/",
    ncLink: "lowest-common-ancestor-in-binary-search-tree/",
    video: "gs2LMfuOR9k",
    difficulty: "Medium",
    code: "0235-lowest-common-ancestor-of-a-binary-search-tree",
  },
  {
    neetcode250: !0,
    problem: "Insert into a Binary Search Tree",
    pattern: "Trees",
    link: "insert-into-a-binary-search-tree/",
    video: "Cpg8f79luEA",
    difficulty: "Medium",
    code: "0701-insert-into-a-binary-search-tree",
  },
  {
    neetcode250: !0,
    problem: "Delete Node in a BST",
    pattern: "Trees",
    link: "delete-node-in-a-bst/",
    video: "LFzAoJJt92M",
    difficulty: "Medium",
    code: "0450-delete-node-in-a-bst",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Binary Tree Level Order Traversal",
    pattern: "Trees",
    link: "binary-tree-level-order-traversal/",
    ncLink: "level-order-traversal-of-binary-tree/",
    video: "6ZnyEApgFYg",
    difficulty: "Medium",
    code: "0102-binary-tree-level-order-traversal",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Binary Tree Right Side View",
    pattern: "Trees",
    link: "binary-tree-right-side-view/",
    ncLink: "binary-tree-right-side-view/",
    video: "d4zLyf32e3I",
    difficulty: "Medium",
    code: "0199-binary-tree-right-side-view",
  },
  {
    problem: "Minimum Distance between BST Nodes",
    pattern: "Trees",
    link: "minimum-distance-between-bst-nodes/",
    video: "joxx4hTYwcw",
    difficulty: "Easy",
    code: "0783-minimum-distance-between-bst-nodes",
  },
  {
    problem: "Symmetric Tree ",
    pattern: "Trees",
    link: "symmetric-tree/",
    video: "Mao9uzxwvmc",
    difficulty: "Easy",
    code: "0101-symmetric-tree",
  },
  {
    problem: "Minimum Time to Collect All Apples in a Tree",
    pattern: "Trees",
    link: "minimum-time-to-collect-all-apples-in-a-tree/",
    video: "Xdt5Z583auM",
    difficulty: "Medium",
    code: "1443-minimum-time-to-collect-all-apples-in-a-tree",
  },
  {
    problem: "Binary Tree Zigzag Level Order Traversal",
    pattern: "Trees",
    link: "binary-tree-zigzag-level-order-traversal/",
    video: "igbboQbiwqw",
    difficulty: "Medium",
    code: "0103-binary-tree-zigzag-level-order-traversal",
  },
  {
    neetcode250: !0,
    problem: "Construct Quad Tree",
    pattern: "Trees",
    link: "construct-quad-tree/",
    video: "UQ-1sBMV0v4",
    difficulty: "Medium",
    code: "0427-construct-quad-tree",
  },
  {
    problem: "Find Duplicate Subtrees",
    pattern: "Trees",
    link: "find-duplicate-subtrees/",
    video: "kn0Z5_qPPzY",
    difficulty: "Medium",
    code: "0652-find-duplicate-subtrees",
  },
  {
    problem: "Check Completeness of a Binary Tree",
    pattern: "Trees",
    link: "check-completeness-of-a-binary-tree/",
    video: "olbiZ-EOSig",
    difficulty: "Medium",
    code: "0958-check-completeness-of-a-binary-tree",
  },
  {
    problem: "Construct Binary Tree from Inorder and Postorder Traversal",
    pattern: "Trees",
    link: "construct-binary-tree-from-inorder-and-postorder-traversal/",
    video: "vm63HuIU7kw",
    difficulty: "Medium",
    code: "0106-construct-binary-tree-from-inorder-and-postorder-traversal",
  },
  {
    problem: "Maximum Width of Binary Tree ",
    pattern: "Trees",
    link: "maximum-width-of-binary-tree/",
    video: "FPzLE2L7uHs",
    difficulty: "Medium",
    code: "0662-maximum-width-of-binary-tree",
  },
  {
    problem: "Time Needed to Inform All Employees ",
    pattern: "Trees",
    link: "time-needed-to-inform-all-employees/",
    video: "zdBYi0p4L5Q",
    difficulty: "Medium",
    code: "1376-time-needed-to-inform-all-employees",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Count Good Nodes In Binary Tree",
    pattern: "Trees",
    link: "count-good-nodes-in-binary-tree/",
    ncLink: "count-good-nodes-in-binary-tree/",
    video: "7cp5imvDzl4",
    difficulty: "Medium",
    code: "1448-count-good-nodes-in-binary-tree",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Validate Binary Search Tree",
    pattern: "Trees",
    link: "validate-binary-search-tree/",
    ncLink: "valid-binary-search-tree/",
    video: "s6ATEkipzow",
    difficulty: "Medium",
    code: "0098-validate-binary-search-tree",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Kth Smallest Element In a Bst",
    pattern: "Trees",
    link: "kth-smallest-element-in-a-bst/",
    ncLink: "kth-smallest-integer-in-bst/",
    video: "5LUXSvjmGCw",
    difficulty: "Medium",
    code: "0230-kth-smallest-element-in-a-bst",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Construct Binary Tree From Preorder And Inorder Traversal",
    pattern: "Trees",
    link: "construct-binary-tree-from-preorder-and-inorder-traversal/",
    ncLink: "binary-tree-from-preorder-and-inorder-traversal/",
    video: "ihj4IQGZ2zc",
    difficulty: "Medium",
    code: "0105-construct-binary-tree-from-preorder-and-inorder-traversal",
  },
  {
    problem: "Unique Binary Search Trees",
    pattern: "Trees",
    link: "unique-binary-search-trees/",
    video: "Ox0TenN3Zpg",
    difficulty: "Medium",
    code: "0096-unique-binary-search-trees",
  },
  {
    problem: "Unique Binary Search Trees II",
    pattern: "Trees",
    link: "unique-binary-search-trees-ii/",
    video: "m907FlQa2Yc",
    difficulty: "Medium",
    code: "0095-unique-binary-search-trees-ii",
  },
  {
    problem: "Sum Root to Leaf Numbers",
    pattern: "Trees",
    link: "sum-root-to-leaf-numbers/",
    video: "Jk16lZGFWxE",
    difficulty: "Medium",
    code: "0129-sum-root-to-leaf-numbers",
  },
  {
    neetcode250: !0,
    problem: "House Robber III",
    pattern: "Trees",
    link: "house-robber-iii/",
    video: "nHR8ytpzz7c",
    difficulty: "Medium",
    code: "0337-house-robber-iii",
  },
  {
    problem: "Flip Equivalent Binary Trees",
    pattern: "Trees",
    link: "flip-equivalent-binary-trees/",
    video: "izRDc1il9Pk",
    difficulty: "Medium",
    code: "0951-flip-equivalent-binary-trees",
  },
  {
    problem: "Operations On Tree",
    pattern: "Trees",
    link: "operations-on-tree/",
    video: "qK4PtjrVD0U",
    difficulty: "Medium",
    code: "1993-operations-on-tree",
  },
  {
    problem: "All Possible Full Binary Trees",
    pattern: "Trees",
    link: "all-possible-full-binary-trees/",
    video: "nZtrZPTTCAo",
    difficulty: "Medium",
    code: "0894-all-possible-full-binary-trees",
  },
  {
    problem: "Find Bottom Left Tree Value",
    pattern: "Trees",
    link: "find-bottom-left-tree-value/",
    video: "u_by_cTsNJA",
    difficulty: "Medium",
    code: "0513-find-bottom-left-tree-value",
  },
  {
    problem: "Trim a Binary Search Tree",
    pattern: "Trees",
    link: "trim-a-binary-search-tree/",
    video: "jwt5mTjEXGc",
    difficulty: "Medium",
    code: "0669-trim-a-binary-search-tree",
  },
  {
    problem: "Binary Search Tree Iterator",
    pattern: "Trees",
    link: "binary-search-tree-iterator/",
    video: "RXy5RzGF5wo",
    difficulty: "Medium",
    code: "0173-binary-search-tree-iterator",
  },
  {
    link: "validate-binary-tree-nodes",
    problem: "Validate Binary Tree Nodes",
    difficulty: "Medium",
    video: "Mw67DTgUEqk",
    pattern: "Trees",
    code: "1361-validate-binary-tree-nodes",
  },
  {
    link: "find-largest-value-in-each-tree-row",
    problem: "Find Largest Value in Tree Row",
    difficulty: "Medium",
    video: "wB9JOh7Z_cY",
    pattern: "Trees",
    code: "0515-find-largest-value-in-each-tree-row",
  },
  {
    link: "pseudo-palindromic-paths-in-a-binary-tree",
    problem: "Pseudo-Palindromic Paths in a Binary Tree",
    difficulty: "Medium",
    video: "MBsSpQnaFzg",
    pattern: "Trees",
    code: "1457-pseudo-palindromic-paths-in-a-binary-tree",
  },
  {
    link: "even-odd-tree",
    problem: "Even Odd Tree",
    difficulty: "Medium",
    video: "FkNWN1Fj_TY",
    pattern: "Trees",
    code: "1609-even-odd-tree",
  },
  {
    link: "smallest-string-starting-from-leaf",
    problem: "Smallest String Starting From Leaf",
    difficulty: "Medium",
    video: "UvdWfxQ_ZDs",
    pattern: "Trees",
    code: "0988-smallest-string-starting-from-leaf",
  },
  {
    neetcode250: !0,
    link: "delete-leaves-with-a-given-value",
    problem: "Delete Leaves With a Given Value",
    difficulty: "Medium",
    video: "FqAoYAwbwV8",
    pattern: "Trees",
    code: "1325-delete-leaves-with-a-given-value",
  },
  {
    link: "distribute-coins-in-binary-tree",
    problem: "Distribute Coins in Binary Tree",
    difficulty: "Medium",
    video: "YfdfIOeV_RU",
    pattern: "Trees",
    code: "0979-distribute-coins-in-binary-tree",
  },
  {
    problem: "Convert Bst to Greater Tree",
    pattern: "Trees",
    link: "convert-bst-to-greater-tree/",
    video: "7vVEJwVvAlI",
    difficulty: "Medium",
    code: "0538-convert-bst-to-greater-tree",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Binary Tree Maximum Path Sum",
    pattern: "Trees",
    link: "binary-tree-maximum-path-sum/",
    ncLink: "binary-tree-maximum-path-sum/",
    video: "Hr5cWUld4vU",
    difficulty: "Hard",
    code: "0124-binary-tree-maximum-path-sum",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Serialize And Deserialize Binary Tree",
    pattern: "Trees",
    link: "serialize-and-deserialize-binary-tree/",
    ncLink: "serialize-and-deserialize-binary-tree/",
    video: "u4JAi2JJhI8",
    difficulty: "Hard",
    code: "0297-serialize-and-deserialize-binary-tree",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Kth Largest Element In a Stream",
    pattern: "Heap / Priority Queue",
    link: "kth-largest-element-in-a-stream/",
    ncLink: "kth-largest-integer-in-a-stream/",
    video: "hOjcdrqMoQ8",
    difficulty: "Easy",
    code: "0703-kth-largest-element-in-a-stream",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Last Stone Weight",
    pattern: "Heap / Priority Queue",
    link: "last-stone-weight/",
    ncLink: "last-stone-weight/",
    video: "B-QCq79-Vfw",
    difficulty: "Easy",
    code: "1046-last-stone-weight",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "K Closest Points to Origin",
    pattern: "Heap / Priority Queue",
    link: "k-closest-points-to-origin/",
    ncLink: "k-closest-points-to-origin/",
    video: "rI2EBUEMfTk",
    difficulty: "Medium",
    code: "0973-k-closest-points-to-origin",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Kth Largest Element In An Array",
    pattern: "Heap / Priority Queue",
    link: "kth-largest-element-in-an-array/",
    ncLink: "kth-largest-element-in-an-array/",
    video: "XEmy13g1Qxc",
    difficulty: "Medium",
    code: "0215-kth-largest-element-in-an-array",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Task Scheduler",
    pattern: "Heap / Priority Queue",
    link: "task-scheduler/",
    ncLink: "task-scheduling/",
    video: "s8p8ukTyA2I",
    difficulty: "Medium",
    code: "0621-task-scheduler",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Design Twitter",
    pattern: "Heap / Priority Queue",
    link: "design-twitter/",
    ncLink: "design-twitter-feed/",
    video: "pNichitDD2E",
    difficulty: "Medium",
    code: "0355-design-twitter",
  },
  {
    link: "least-number-of-unique-integers-after-k-removals",
    problem: "Least Number of Unique Integers after K Removal",
    difficulty: "Medium",
    video: "Nsp_ta7SlEk",
    pattern: "Heap / Priority Queue",
    code: "1481-least-number-of-unique-integers-after-k-removals",
  },
  {
    link: "furthest-building-you-can-reach",
    problem: "Furthest Building You Can Reach",
    difficulty: "Medium",
    video: "zyTeznvXCtg",
    pattern: "Heap / Priority Queue",
    code: "1642-furthest-building-you-can-reach",
  },
  {
    problem: "Minimize Deviation in Array",
    pattern: "Heap / Priority Queue",
    link: "minimize-deviation-in-array/",
    video: "boHNFptxo2A",
    difficulty: "Hard",
    code: "1675-minimize-deviation-in-array",
  },
  {
    problem: "Maximum Subsequence Score",
    pattern: "Heap / Priority Queue",
    link: "maximum-subsequence-score/",
    video: "ax1DKi5lJwk",
    difficulty: "Medium",
    code: "2542-maximum-subsequence-score",
  },
  {
    neetcode250: !0,
    problem: "Single Threaded CPU",
    pattern: "Heap / Priority Queue",
    link: "single-threaded-cpu/",
    video: "RR1n-d4oYqE",
    difficulty: "Medium",
    code: "1834-single-threaded-cpu",
  },
  {
    problem: "Seat Reservation Manager",
    pattern: "Heap / Priority Queue",
    link: "seat-reservation-manager/",
    video: "ahobllKXEEY",
    difficulty: "Medium",
    code: "1845-seat-reservation-manager",
  },
  {
    problem: "Process Tasks Using Servers",
    pattern: "Heap / Priority Queue",
    link: "process-tasks-using-servers/",
    video: "XKA22PecuMQ",
    difficulty: "Medium",
    code: "1882-process-tasks-using-servers",
  },
  {
    problem: "Find The Kth Largest Integer In The Array",
    pattern: "Heap / Priority Queue",
    link: "find-the-kth-largest-integer-in-the-array/",
    video: "lRCaNiqO3xI",
    difficulty: "Medium",
    code: "1985-find-the-kth-largest-integer-in-the-array",
  },
  {
    neetcode250: !0,
    problem: "Reorganize String",
    pattern: "Heap / Priority Queue",
    link: "reorganize-string/",
    video: "2g_b1aYTHeg",
    difficulty: "Medium",
    code: "0767-reorganize-string",
  },
  {
    neetcode250: !0,
    problem: "Longest Happy String",
    pattern: "Heap / Priority Queue",
    link: "longest-happy-string/",
    video: "8u-H6O_XQKE",
    difficulty: "Medium",
    code: "1405-longest-happy-string",
  },
  {
    neetcode250: !0,
    problem: "Car Pooling",
    pattern: "Heap / Priority Queue",
    link: "car-pooling/",
    video: "08sn_w4LWEE",
    difficulty: "Medium",
    code: "1094-car-pooling",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Find Median From Data Stream",
    pattern: "Heap / Priority Queue",
    link: "find-median-from-data-stream/",
    ncLink: "find-median-in-a-data-stream/",
    video: "itmhHWaHupI",
    difficulty: "Hard",
    code: "0295-find-median-from-data-stream",
  },
  {
    problem: "Maximum Performance of a Team",
    pattern: "Heap / Priority Queue",
    link: "maximum-performance-of-a-team/",
    video: "Y7UTvogADH0",
    difficulty: "Hard",
    code: "1383-maximum-performance-of-a-team",
  },
  {
    neetcode250: !0,
    problem: "IPO",
    pattern: "Heap / Priority Queue",
    link: "ipo/",
    video: "1IUzNJ6TPEM",
    difficulty: "Hard",
    code: "0502-ipo",
  },
  {
    link: "minimum-cost-to-hire-k-workers",
    problem: "Minimum Cost to Hire K Workers",
    difficulty: "Hard",
    video: "f879mUH6vJk",
    pattern: "Heap / Priority Queue",
    code: "0857-minimum-cost-to-hire-k-workers",
  },
  {
    link: "number-of-flowers-in-full-bloom",
    problem: "Number of Flowers in Full Bloom",
    difficulty: "Hard",
    video: "zY3Uty9IwvY",
    pattern: "Heap / Priority Queue",
    code: "2251-number-of-flowers-in-full-bloom",
  },
  {
    link: "constrained-subsequence-sum",
    problem: "Constrained Subsequence Sum",
    difficulty: "Hard",
    video: "-IYZv-nOSys",
    pattern: "Heap / Priority Queue",
    code: "1425-constrained-subsequence-sum",
  },
  {
    neetcode250: !0,
    link: "sum-of-all-subset-xor-totals",
    problem: "Sum of All Subsets XOR Total",
    difficulty: "Easy",
    video: "LI7YR-bwNYY",
    pattern: "Backtracking",
    code: "1863-sum-of-all-subset-xor-totals",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Subsets",
    pattern: "Backtracking",
    link: "subsets/",
    ncLink: "subsets/",
    video: "REOH22Xwdkk",
    difficulty: "Medium",
    code: "0078-subsets",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Combination Sum",
    pattern: "Backtracking",
    link: "combination-sum/",
    ncLink: "combination-target-sum/",
    video: "GBKI9VSKdGg",
    difficulty: "Medium",
    code: "0039-combination-sum",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Combination Sum II",
    pattern: "Backtracking",
    link: "combination-sum-ii/",
    ncLink: "combination-target-sum-ii/",
    video: "FOyRpNUSFeA",
    difficulty: "Medium",
    code: "0040-combination-sum-ii",
  },
  {
    neetcode250: !0,
    problem: "Combinations",
    pattern: "Backtracking",
    link: "combinations/",
    video: "q0s6m7AiM7o",
    difficulty: "Medium",
    code: "0077-combinations",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Permutations",
    pattern: "Backtracking",
    link: "permutations/",
    ncLink: "permutations/",
    video: "FZe0UqISmUw",
    difficulty: "Medium",
    code: "0046-permutations",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Subsets II",
    pattern: "Backtracking",
    link: "subsets-ii/",
    ncLink: "subsets-ii/",
    video: "Vn2v6ajA7U0",
    difficulty: "Medium",
    code: "0090-subsets-ii",
  },
  {
    neetcode250: !0,
    problem: "Permutations II",
    pattern: "Backtracking",
    link: "permutations-ii/",
    video: "qhBVWf0YafA",
    difficulty: "Medium",
    code: "0047-permutations-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Word Search",
    pattern: "Backtracking",
    link: "word-search/",
    ncLink: "search-for-word/",
    video: "pfiQ_PS1g8E",
    difficulty: "Medium",
    code: "0079-word-search",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Palindrome Partitioning",
    pattern: "Backtracking",
    link: "palindrome-partitioning/",
    ncLink: "palindrome-partitioning/",
    video: "3jvWodd7ht0",
    difficulty: "Medium",
    code: "0131-palindrome-partitioning",
  },
  {
    problem: "Restore IP Addresses",
    pattern: "Backtracking",
    link: "restore-ip-addresses/",
    video: "61tN4YEdiTM",
    difficulty: "Medium",
    code: "0093-restore-ip-addresses",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Letter Combinations of a Phone Number",
    pattern: "Backtracking",
    link: "letter-combinations-of-a-phone-number/",
    ncLink: "combinations-of-a-phone-number/",
    video: "0snEunUacZY",
    difficulty: "Medium",
    code: "0017-letter-combinations-of-a-phone-number",
  },
  {
    neetcode250: !0,
    problem: "Matchsticks to Square",
    pattern: "Backtracking",
    link: "matchsticks-to-square/",
    video: "hUe0cUKV-YY",
    difficulty: "Medium",
    code: "0473-matchsticks-to-square",
  },
  {
    problem: "Splitting a String Into Descending Consecutive Values",
    pattern: "Backtracking",
    link: "splitting-a-string-into-descending-consecutive-values/",
    video: "eDtMmysldaw",
    difficulty: "Medium",
    code: "1849-splitting-a-string-into-descending-consecutive-values",
  },
  {
    problem: "Find Unique Binary String",
    pattern: "Backtracking",
    link: "find-unique-binary-string/",
    video: "aHqn4Dynd1k",
    difficulty: "Medium",
    code: "1980-find-unique-binary-string",
  },
  {
    problem: "Maximum Length of a Concatenated String With Unique Characters",
    pattern: "Backtracking",
    link: "maximum-length-of-a-concatenated-string-with-unique-characters/",
    video: "d4SPuvkaeoo",
    difficulty: "Medium",
    code: "1239-maximum-length-of-a-concatenated-string-with-unique-characters",
  },
  {
    neetcode250: !0,
    problem: "Partition to K Equal Sum Subsets",
    pattern: "Backtracking",
    link: "partition-to-k-equal-sum-subsets/",
    video: "mBk4I0X46oI",
    difficulty: "Medium",
    code: "0698-partition-to-k-equal-sum-subsets",
  },
  {
    link: "the-number-of-beautiful-subsets",
    problem: "The Number of Beautiful Subsets",
    difficulty: "Medium",
    video: "Dle_SpjHTio",
    pattern: "Backtracking",
    code: "2597-the-number-of-beautiful-subsets",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "N Queens",
    pattern: "Backtracking",
    link: "n-queens/",
    ncLink: "n-queens/",
    video: "Ph95IHmRp5M",
    difficulty: "Hard",
    code: "0051-n-queens",
  },
  {
    neetcode250: !0,
    problem: "N Queens II",
    pattern: "Backtracking",
    link: "n-queens-ii/",
    video: "nalYyLZgvCY",
    difficulty: "Hard",
    code: "0052-n-queens-ii",
  },
  {
    link: "maximum-score-words-formed-by-letters",
    problem: "Maximum Score Words Formed By Letters",
    difficulty: "Hard",
    video: "1cV8Hq9IAk4",
    pattern: "Backtracking",
    code: "1255-maximum-score-words-formed-by-letters",
  },
  {
    neetcode250: !0,
    link: "word-break-ii",
    problem: "Word Break II",
    difficulty: "Hard",
    video: "QgLKdluDo08",
    pattern: "Backtracking",
    code: "0140-word-break-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Implement Trie Prefix Tree",
    pattern: "Tries",
    link: "implement-trie-prefix-tree/",
    ncLink: "implement-prefix-tree/",
    video: "oobqoCJlHA0",
    difficulty: "Medium",
    code: "0208-implement-trie-prefix-tree",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Design Add And Search Words Data Structure",
    pattern: "Tries",
    link: "design-add-and-search-words-data-structure/",
    ncLink: "design-word-search-data-structure/",
    video: "BTf05gs_8iU",
    difficulty: "Medium",
    code: "0211-design-add-and-search-words-data-structure",
  },
  {
    neetcode250: !0,
    problem: "Extra Characters in a String",
    pattern: "Tries",
    link: "extra-characters-in-a-string/",
    video: "ONstwO1cD7c",
    difficulty: "Medium",
    code: "2707-extra-characters-in-a-string",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Word Search II",
    pattern: "Tries",
    link: "word-search-ii/",
    ncLink: "search-for-word-ii/",
    video: "asbcE9mZz_U",
    difficulty: "Hard",
    code: "0212-word-search-ii",
  },
  {
    neetcode250: !0,
    problem: "Island Perimeter",
    pattern: "Graphs",
    link: "island-perimeter/",
    video: "fISIuAFRM2s",
    difficulty: "Easy",
    code: "0463-island-perimeter",
  },
  {
    neetcode250: !0,
    problem: "Verifying An Alien Dictionary",
    pattern: "Graphs",
    link: "verifying-an-alien-dictionary/",
    video: "OVgPAJIyX6o",
    difficulty: "Easy",
    code: "0953-verifying-an-alien-dictionary",
  },
  {
    neetcode250: !0,
    link: "find-the-town-judge",
    problem: "Find the Town Judge",
    difficulty: "Easy",
    video: "QiGaxdUINJ8",
    pattern: "Graphs",
    code: "0997-find-the-town-judge",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Number of Islands",
    pattern: "Graphs",
    link: "number-of-islands/",
    ncLink: "count-number-of-islands/",
    video: "pV2kpPD66nE",
    difficulty: "Medium",
    code: "0200-number-of-islands",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Max Area of Island",
    pattern: "Graphs",
    link: "max-area-of-island/",
    ncLink: "max-area-of-island/",
    video: "iJGr1OtmH0c",
    difficulty: "Medium",
    code: "0695-max-area-of-island",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Clone Graph",
    pattern: "Graphs",
    link: "clone-graph/",
    ncLink: "clone-graph/",
    video: "mQeF6bN8hMk",
    difficulty: "Medium",
    code: "0133-clone-graph",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Walls And Gates",
    premium: !0,
    ncLink: "islands-and-treasure/",
    pattern: "Graphs",
    link: "walls-and-gates/",
    video: "e69C6xhiSQE",
    difficulty: "Medium",
    code: "0286-walls-and-gates",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Rotting Oranges",
    pattern: "Graphs",
    link: "rotting-oranges/",
    ncLink: "rotting-fruit/",
    video: "y704fEOx0s0",
    difficulty: "Medium",
    code: "0994-rotting-oranges",
  },
  {
    problem: "Count Sub Islands",
    pattern: "Graphs",
    link: "count-sub-islands/",
    video: "mLpW3qfbNJ8",
    difficulty: "Medium",
    code: "1905-count-sub-islands",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Pacific Atlantic Water Flow",
    pattern: "Graphs",
    link: "pacific-atlantic-water-flow/",
    ncLink: "pacific-atlantic-water-flow/",
    video: "s-VkcjHqkGI",
    difficulty: "Medium",
    code: "0417-pacific-atlantic-water-flow",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Surrounded Regions",
    pattern: "Graphs",
    link: "surrounded-regions/",
    ncLink: "surrounded-regions/",
    video: "9z2BunfoZ5Y",
    difficulty: "Medium",
    code: "0130-surrounded-regions",
  },
  {
    problem: "Reorder Routes to Make All Paths Lead to The City Zero",
    pattern: "Graphs",
    link: "reorder-routes-to-make-all-paths-lead-to-the-city-zero/",
    video: "m17yOR5_PpI",
    difficulty: "Medium",
    code: "1466-reorder-routes-to-make-all-paths-lead-to-the-city-zero",
  },
  {
    problem: "Snakes And Ladders",
    pattern: "Graphs",
    link: "snakes-and-ladders/",
    video: "6lH4nO3JfLk",
    difficulty: "Medium",
    code: "0909-snakes-and-ladders",
  },
  {
    neetcode250: !0,
    problem: "Open The Lock",
    pattern: "Graphs",
    link: "open-the-lock/",
    video: "Pzg3bCDY87w",
    difficulty: "Medium",
    code: "0752-open-the-lock",
  },
  {
    problem: "Find Eventual Safe States",
    pattern: "Graphs",
    link: "find-eventual-safe-states/",
    video: "Re_v0j0CRsg",
    difficulty: "Medium",
    code: "0802-find-eventual-safe-states",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Course Schedule",
    pattern: "Graphs",
    link: "course-schedule/",
    ncLink: "course-schedule/",
    video: "EgI5nU9etnU",
    difficulty: "Medium",
    code: "0207-course-schedule",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Course Schedule II",
    pattern: "Graphs",
    link: "course-schedule-ii/",
    ncLink: "course-schedule-ii/",
    video: "Akt3glAwyfY",
    difficulty: "Medium",
    code: "0210-course-schedule-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Graph Valid Tree",
    premium: !0,
    ncLink: "valid-tree/",
    pattern: "Graphs",
    link: "graph-valid-tree/",
    video: "bXsUuownnoQ",
    difficulty: "Medium",
    code: "0261-graph-valid-tree",
  },
  {
    neetcode250: !0,
    problem: "Course Schedule IV",
    pattern: "Graphs",
    link: "course-schedule-iv/",
    video: "cEW05ofxhn0",
    difficulty: "Medium",
    code: "1462-course-schedule-iv",
  },
  {
    problem: "Check if Move Is Legal",
    pattern: "Graphs",
    link: "check-if-move-is-legal/",
    video: "KxK33AcQZpQ",
    difficulty: "Medium",
    code: "1958-check-if-move-is-legal",
  },
  {
    problem: "Shortest Bridge",
    pattern: "Graphs",
    link: "shortest-bridge/",
    video: "gkINMhbbIbU",
    difficulty: "Medium",
    code: "0934-shortest-bridge",
  },
  {
    problem: "Shortest Path in Binary Matrix",
    pattern: "Graphs",
    video: "YnxUdAO7TAo",
    link: "shortest-path-in-binary-matrix/",
    difficulty: "Medium",
    code: "1091-shortest-path-in-binary-matrix",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Number of Connected Components In An Undirected Graph",
    premium: !0,
    ncLink: "count-connected-components/",
    pattern: "Graphs",
    link: "number-of-connected-components-in-an-undirected-graph/",
    video: "8f1XPm4WOUc",
    difficulty: "Medium",
    code: "0323-number-of-connected-components-in-an-undirected-graph",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Redundant Connection",
    pattern: "Graphs",
    link: "redundant-connection/",
    ncLink: "redundant-connection/",
    video: "1lNK80tOTfc",
    difficulty: "Medium",
    code: "0684-redundant-connection",
  },
  {
    neetcode250: !0,
    problem: "Accounts Merge",
    pattern: "Graphs",
    link: "accounts-merge/",
    video: "6st4IxEF-90",
    difficulty: "Medium",
    code: "0721-accounts-merge",
  },
  {
    problem: "Find Closest Node to Given Two Nodes",
    pattern: "Graphs",
    link: "find-closest-node-to-given-two-nodes/",
    video: "AZA8orksO4w",
    difficulty: "Medium",
    code: "2359-find-closest-node-to-given-two-nodes",
  },
  {
    problem: "As Far from Land as Possible",
    pattern: "Graphs",
    link: "as-far-from-land-as-possible/",
    video: "fjxb1hQfrZk",
    difficulty: "Medium",
    code: "1162-as-far-from-land-as-possible",
  },
  {
    problem: "Shortest Path with Alternating Colors",
    pattern: "Graphs",
    link: "shortest-path-with-alternating-colors/",
    video: "69rcy6lb-HQ",
    difficulty: "Medium",
    code: "1129-shortest-path-with-alternating-colors",
  },
  {
    problem: "Minimum Fuel Cost to Report to the Capital",
    pattern: "Graphs",
    link: "minimum-fuel-cost-to-report-to-the-capital/",
    video: "I3lnDUIzIG4",
    difficulty: "Medium",
    code: "2477-minimum-fuel-cost-to-report-to-the-capital",
  },
  {
    problem: "Minimum Score of a Path Between Two Cities",
    pattern: "Graphs",
    link: "minimum-score-of-a-path-between-two-cities/",
    video: "K7-mXA0irhY",
    difficulty: "Medium",
    code: "2492-minimum-score-of-a-path-between-two-cities",
  },
  {
    problem: "Number of Closed Islands",
    pattern: "Graphs",
    link: "number-of-closed-islands/",
    video: "X8k48xek8g8",
    difficulty: "Medium",
    code: "1254-number-of-closed-islands",
  },
  {
    problem: "Number of Enclaves",
    pattern: "Graphs",
    link: "number-of-enclaves/",
    video: "gf0zsh1FIgE",
    difficulty: "Medium",
    code: "1020-number-of-enclaves",
  },
  {
    problem: "Minimum Number of Vertices to Reach all Nodes",
    pattern: "Graphs",
    link: "minimum-number-of-vertices-to-reach-all-nodes/",
    video: "TLzcum7vrTc",
    difficulty: "Medium",
    code: "1557-minimum-number-of-vertices-to-reach-all-nodes",
  },
  {
    problem: "Is Graph Bipartite?",
    pattern: "Graphs",
    link: "is-graph-bipartite/",
    video: "mev55LTubBY",
    difficulty: "Medium",
    code: "0785-is-graph-bipartite",
  },
  {
    neetcode250: !0,
    problem: "Evaluate Division",
    pattern: "Graphs",
    link: "evaluate-division/",
    video: "Uei1fwDoyKk",
    difficulty: "Medium",
    code: "0399-evaluate-division",
  },
  {
    problem: "Detonate the Maximum Bombs",
    pattern: "Graphs",
    link: "detonate-the-maximum-bombs/",
    video: "8NPbAvVXKR4",
    difficulty: "Medium",
    code: "2101-detonate-the-maximum-bombs",
  },
  {
    neetcode250: !0,
    link: "minimum-height-trees",
    problem: "Minimum Height Trees",
    difficulty: "Medium",
    video: "wQGQnyv_9hI",
    pattern: "Graphs",
    code: "0310-minimum-height-trees",
  },
  {
    link: "path-with-maximum-gold",
    problem: "Path with Maximum Gold",
    difficulty: "Medium",
    video: "I1wllM_pozY",
    pattern: "Graphs",
    code: "1219-path-with-maximum-gold",
  },
  {
    problem: "Largest Color Value in a Directed Graph",
    pattern: "Graphs",
    link: "largest-color-value-in-a-directed-graph/",
    video: "xLoDjKczUSk",
    difficulty: "Hard",
    code: "1857-largest-color-value-in-a-directed-graph",
  },
  {
    problem: "Minimum Number of Days to Eat N Oranges",
    pattern: "Graphs",
    link: "minimum-number-of-days-to-eat-n-oranges/",
    video: "LziQ6Qx9sks",
    difficulty: "Hard",
    code: "1553-minimum-number-of-days-to-eat-n-oranges",
  },
  {
    link: "find-all-people-with-secret",
    problem: "Find All People With Secret",
    difficulty: "Hard",
    video: "1XujGRSU1bQ",
    pattern: "Graphs",
    code: "2092-find-all-people-with-secret",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Word Ladder",
    pattern: "Graphs",
    link: "word-ladder/",
    ncLink: "word-ladder/",
    video: "h9iTnkgv05E",
    difficulty: "Hard",
    code: "0127-word-ladder",
  },
  {
    link: "parallel-courses-iii",
    problem: "Parallel Courses III",
    difficulty: "Hard",
    video: "a_NlRPnqCrg",
    pattern: "Graphs",
    code: "2050-parallel-courses-iii",
  },
  {
    neetcode250: !0,
    problem: "Path with Minimum Effort",
    pattern: "Advanced Graphs",
    link: "path-with-minimum-effort/",
    video: "XQlxCCx2vI4",
    difficulty: "Medium",
    code: "1631-path-with-minimum-effort",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Network Delay Time",
    pattern: "Advanced Graphs",
    link: "network-delay-time/",
    ncLink: "network-delay-time/",
    video: "EaphyqKU4PQ",
    difficulty: "Medium",
    code: "0743-network-delay-time",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Reconstruct Itinerary",
    pattern: "Advanced Graphs",
    link: "reconstruct-itinerary/",
    ncLink: "reconstruct-flight-path/",
    video: "ZyB_gQ8vqGA",
    difficulty: "Hard",
    code: "0332-reconstruct-itinerary",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Min Cost to Connect All Points",
    pattern: "Advanced Graphs",
    link: "min-cost-to-connect-all-points/",
    ncLink: "min-cost-to-connect-points/",
    video: "f7JOBJIC-NA",
    difficulty: "Medium",
    code: "1584-min-cost-to-connect-all-points",
  },
  {
    problem: "Path with Maximum Probability",
    pattern: "Advanced Graphs",
    link: "path-with-maximum-probability/",
    video: "kPsDTGcrzGM",
    difficulty: "Medium",
    code: "1514-path-with-maximum-probability",
  },
  {
    link: "find-the-safest-path-in-a-grid",
    problem: "Find the Safest Path in a Grid",
    difficulty: "Medium",
    video: "-5mQcNiVWTs",
    pattern: "Advanced Graphs",
    code: "2812-find-the-safest-path-in-a-grid",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Swim In Rising Water",
    pattern: "Advanced Graphs",
    link: "swim-in-rising-water/",
    ncLink: "swim-in-rising-water/",
    video: "amvrKlMLuGY",
    difficulty: "Hard",
    code: "0778-swim-in-rising-water",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Alien Dictionary",
    premium: !0,
    ncLink: "foreign-dictionary/",
    pattern: "Advanced Graphs",
    link: "alien-dictionary/",
    video: "6kTZYvNNyps",
    difficulty: "Hard",
    code: "0269-alien-dictionary",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Cheapest Flights Within K Stops",
    pattern: "Advanced Graphs",
    link: "cheapest-flights-within-k-stops/",
    ncLink: "cheapest-flight-path/",
    video: "5eIK3zUdYmE",
    difficulty: "Medium",
    code: "0787-cheapest-flights-within-k-stops",
  },
  {
    problem: "Number of Good Paths",
    pattern: "Advanced Graphs",
    link: "number-of-good-paths/",
    video: "rv2GBYQm7xM",
    difficulty: "Hard",
    code: "2421-number-of-good-paths",
  },
  {
    problem: "Remove Max Number of Edges to Keep Graph Fully Traversable",
    pattern: "Advanced Graphs",
    link: "remove-max-number-of-edges-to-keep-graph-fully-traversable/",
    video: "booGwg5wYm4",
    difficulty: "Hard",
    code: "1579-remove-max-number-of-edges-to-keep-graph-fully-traversable",
  },
  {
    neetcode250: !0,
    problem: "Find Critical and Pseudo Critical Edges in Minimum Spanning Tree",
    pattern: "Advanced Graphs",
    link: "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree/",
    video: "83JnUxrLKJU",
    difficulty: "Hard",
    code: "1489-find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
  },
  {
    neetcode250: !0,
    link: "build-a-matrix-with-conditions",
    problem: "Build a Matrix With Conditions",
    difficulty: "Hard",
    video: "khTKB1PzCuw",
    pattern: "Advanced Graphs",
    code: "2392-build-a-matrix-with-conditions",
  },
  {
    neetcode250: !0,
    link: "greatest-common-divisor-traversal",
    problem: "Greatest Common Divisor Traversal",
    difficulty: "Hard",
    video: "jZ-RVp5CVYY",
    pattern: "Advanced Graphs",
    code: "2709-greatest-common-divisor-traversal",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Climbing Stairs",
    pattern: "1-D Dynamic Programming",
    link: "climbing-stairs/",
    ncLink: "climbing-stairs/",
    video: "Y0lT9Fck7qI",
    difficulty: "Easy",
    code: "0070-climbing-stairs",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Min Cost Climbing Stairs",
    pattern: "1-D Dynamic Programming",
    link: "min-cost-climbing-stairs/",
    ncLink: "min-cost-climbing-stairs/",
    code: "0746-min-cost-climbing-stairs",
    video: "ktmzAZWkEZ0",
    difficulty: "Easy",
  },
  {
    neetcode250: !0,
    problem: "N-th Tribonacci Number",
    pattern: "1-D Dynamic Programming",
    link: "n-th-tribonacci-number/",
    video: "3lpNp5Ojvrw",
    difficulty: "Easy",
    code: "1137-n-th-tribonacci-number",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "House Robber",
    pattern: "1-D Dynamic Programming",
    link: "house-robber/",
    ncLink: "house-robber/",
    video: "73r3KWiEvyk",
    difficulty: "Medium",
    code: "0198-house-robber",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "House Robber II",
    pattern: "1-D Dynamic Programming",
    link: "house-robber-ii/",
    ncLink: "house-robber-ii/",
    video: "rWAJCfYYOvM",
    difficulty: "Medium",
    code: "0213-house-robber-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Longest Palindromic Substring",
    pattern: "1-D Dynamic Programming",
    link: "longest-palindromic-substring/",
    ncLink: "longest-palindromic-substring/",
    video: "XYQecbcd6_c",
    difficulty: "Medium",
    code: "0005-longest-palindromic-substring",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Palindromic Substrings",
    pattern: "1-D Dynamic Programming",
    link: "palindromic-substrings/",
    ncLink: "palindromic-substrings/",
    video: "4RACzI5-du8",
    difficulty: "Medium",
    code: "0647-palindromic-substrings",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Decode Ways",
    pattern: "1-D Dynamic Programming",
    link: "decode-ways/",
    ncLink: "decode-ways/",
    video: "6aEyTjOwlJU",
    difficulty: "Medium",
    code: "0091-decode-ways",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Coin Change",
    pattern: "1-D Dynamic Programming",
    link: "coin-change/",
    ncLink: "coin-change/",
    video: "H9bfqozjoqs",
    difficulty: "Medium",
    code: "0322-coin-change",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Maximum Product Subarray",
    pattern: "1-D Dynamic Programming",
    link: "maximum-product-subarray/",
    ncLink: "maximum-product-subarray/",
    video: "lXVy6YWFcRM",
    difficulty: "Medium",
    code: "0152-maximum-product-subarray",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Word Break",
    pattern: "1-D Dynamic Programming",
    link: "word-break/",
    ncLink: "word-break/",
    video: "Sx9NNgInc3A",
    difficulty: "Medium",
    code: "0139-word-break",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Longest Increasing Subsequence",
    pattern: "1-D Dynamic Programming",
    link: "longest-increasing-subsequence/",
    ncLink: "longest-increasing-subsequence/",
    video: "cjWnW0hdF1Y",
    difficulty: "Medium",
    code: "0300-longest-increasing-subsequence",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Partition Equal Subset Sum",
    pattern: "1-D Dynamic Programming",
    link: "partition-equal-subset-sum/",
    ncLink: "partition-equal-subset-sum/",
    video: "IsvocB5BJhw",
    difficulty: "Medium",
    code: "0416-partition-equal-subset-sum",
  },
  {
    problem: "Triangle",
    pattern: "1-D Dynamic Programming",
    link: "triangle/",
    video: "OM1MTokvxs4",
    difficulty: "Medium",
    code: "0120-triangle",
  },
  {
    problem: "Delete And Earn",
    pattern: "1-D Dynamic Programming",
    link: "delete-and-earn/",
    video: "7FCemBxvGw0",
    difficulty: "Medium",
    code: "0740-delete-and-earn",
  },
  {
    problem: "Paint House",
    pattern: "1-D Dynamic Programming",
    link: "paint-house/",
    video: "-w67-4tnH5U",
    difficulty: "Medium",
    code: "0256-paint-house",
  },
  {
    neetcode250: !0,
    problem: "Combination Sum IV",
    pattern: "1-D Dynamic Programming",
    link: "combination-sum-iv/",
    video: "dw2nMCxG0ik",
    difficulty: "Medium",
    code: "0377-combination-sum-iv",
  },
  {
    neetcode250: !0,
    problem: "Perfect Squares",
    pattern: "1-D Dynamic Programming",
    link: "perfect-squares/",
    video: "HLZLwjzIVGo",
    difficulty: "Medium",
    code: "0279-perfect-squares",
  },
  {
    problem: "Check if There is a Valid Partition For The Array",
    pattern: "1-D Dynamic Programming",
    link: "check-if-there-is-a-valid-partition-for-the-array/",
    video: "OxXPiwWFdTI",
    difficulty: "Medium",
    code: "2369-check-if-there-is-a-valid-partition-for-the-array",
  },
  {
    problem: "Maximum Subarray Min Product",
    pattern: "1-D Dynamic Programming",
    link: "maximum-subarray-min-product/",
    video: "YLesLbNkyjA",
    difficulty: "Medium",
    code: "1856-maximum-subarray-min-product",
  },
  {
    problem: "Minimum Cost For Tickets",
    pattern: "1-D Dynamic Programming",
    link: "minimum-cost-for-tickets/",
    video: "4Kww-zIkWWY",
    difficulty: "Medium",
    code: "0983-minimum-cost-for-tickets",
  },
  {
    neetcode250: !0,
    problem: "Integer Break",
    pattern: "1-D Dynamic Programming",
    link: "integer-break/",
    video: "in6QbUPMJ3I",
    difficulty: "Medium",
    code: "0343-integer-break",
  },
  {
    problem: "Number of Longest Increasing Subsequence",
    pattern: "1-D Dynamic Programming",
    link: "number-of-longest-increasing-subsequence/",
    video: "Tuc-rjJbsXU",
    difficulty: "Medium",
    code: "0673-number-of-longest-increasing-subsequence",
  },
  {
    problem: "Stickers to Spell Word",
    pattern: "1-D Dynamic Programming",
    link: "stickers-to-spell-word/",
    video: "hsomLb6mUdI",
    difficulty: "Hard",
    code: "0691-stickers-to-spell-word",
  },
  {
    problem: "Uncrossed Lines",
    pattern: "1-D Dynamic Programming",
    link: "uncrossed-lines/",
    video: "mnJF4vJ7GyE",
    difficulty: "Medium",
    code: "1035-uncrossed-lines",
  },
  {
    problem: "Solving Questions With Brainpower",
    pattern: "1-D Dynamic Programming",
    link: "solving-questions-with-brainpower/",
    video: "D7TD_ArkfkA",
    difficulty: "Medium",
    code: "2140-solving-questions-with-brainpower",
  },
  {
    problem: "Count Ways to Build Good Strings",
    pattern: "1-D Dynamic Programming",
    link: "count-ways-to-build-good-strings/",
    video: "JKpVHG2mhbk",
    difficulty: "Medium",
    code: "2466-count-ways-to-build-good-strings",
  },
  {
    problem: "New 21 Game",
    pattern: "1-D Dynamic Programming",
    link: "new-21-game/",
    video: "zKi4LzjK27k",
    difficulty: "Medium",
    code: "0837-new-21-game",
  },
  {
    problem: "Best Team with no Conflicts",
    pattern: "1-D Dynamic Programming",
    link: "best-team-with-no-conflicts/",
    video: "7kURH3btcV4",
    difficulty: "Medium",
    code: "1626-best-team-with-no-conflicts",
  },
  {
    link: "longest-string-chain",
    problem: "Longest String Chain",
    difficulty: "Medium",
    video: "7b0V1gT_TIk",
    pattern: "1-D Dynamic Programming",
    code: "1048-longest-string-chain",
  },
  {
    link: "knight-dialer",
    problem: "Knight Dialer",
    difficulty: "Medium",
    video: "vlsUUm_qqsY",
    pattern: "1-D Dynamic Programming",
    code: "0935-knight-dialer",
  },
  {
    link: "partition-array-for-maximum-sum",
    problem: "Partition Array for Maximum Sum",
    difficulty: "Medium",
    video: "kWhy4ZUBdOY",
    pattern: "1-D Dynamic Programming",
    code: "1043-partition-array-for-maximum-sum",
  },
  {
    link: "largest-divisible-subset",
    problem: "Largest Divisible Subset",
    difficulty: "Medium",
    video: "LeRU6irRoW0",
    pattern: "1-D Dynamic Programming",
    code: "0368-largest-divisible-subset",
  },
  {
    neetcode250: !0,
    problem: "Stone Game III",
    pattern: "1-D Dynamic Programming",
    link: "stone-game-iii/",
    video: "HsLG5QW9CFQ",
    difficulty: "Hard",
    code: "1406-stone-game-iii",
  },
  {
    problem: "Concatenated Words",
    pattern: "1-D Dynamic Programming",
    link: "concatenated-words/",
    video: "iHp7fjw1R28",
    difficulty: "Hard",
    code: "0472-concatenated-words",
  },
  {
    problem: "Maximize Score after N Operations",
    pattern: "1-D Dynamic Programming",
    link: "maximize-score-after-n-operations/",
    video: "RRQVDqp5RSE",
    difficulty: "Hard",
    code: "1799-maximize-score-after-n-operations",
  },
  {
    problem: "Find the Longest Valid Obstacle Course at Each Position",
    pattern: "1-D Dynamic Programming",
    link: "find-the-longest-valid-obstacle-course-at-each-position/",
    video: "Xq9VT7p0lic",
    difficulty: "Hard",
    code: "1964-find-the-longest-valid-obstacle-course-at-each-position",
  },
  {
    problem: "Count all Valid Pickup and Delivery Options",
    pattern: "1-D Dynamic Programming",
    link: "count-all-valid-pickup-and-delivery-options/",
    video: "OpgslsirW8s",
    difficulty: "Hard",
    code: "1359-count-all-valid-pickup-and-delivery-options",
  },
  {
    link: "number-of-ways-to-divide-a-long-corridor",
    problem: "Number of Ways to Divide a Long Corridor",
    difficulty: "Hard",
    video: "YOTjCd4Eyhc",
    pattern: "1-D Dynamic Programming",
    code: "2147-number-of-ways-to-divide-a-long-corridor",
  },
  {
    link: "maximum-profit-in-job-scheduling",
    problem: "Maximum Profit in Job Scheduling",
    difficulty: "Hard",
    video: "JLoWc3v0SiE",
    pattern: "1-D Dynamic Programming",
    code: "1235-maximum-profit-in-job-scheduling",
  },
  {
    link: "student-attendance-record-ii",
    problem: "Student Attendance Record II",
    difficulty: "Hard",
    video: "BPIJ5ROX0i4",
    pattern: "1-D Dynamic Programming",
    code: "0552-student-attendance-record-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Unique Paths",
    pattern: "2-D Dynamic Programming",
    link: "unique-paths/",
    ncLink: "count-paths/",
    video: "IlEsdxuD4lY",
    difficulty: "Medium",
    code: "0062-unique-paths",
  },
  {
    neetcode250: !0,
    problem: "Unique Paths II",
    pattern: "2-D Dynamic Programming",
    link: "unique-paths-ii/",
    video: "d3UOz7zdE4I",
    difficulty: "Medium",
    code: "0063-unique-paths-ii",
  },
  {
    neetcode250: !0,
    problem: "Minimum Path Sum",
    pattern: "2-D Dynamic Programming",
    link: "minimum-path-sum/",
    video: "pGMsrvt0fpk",
    difficulty: "Medium",
    code: "0064-minimum-path-sum",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Longest Common Subsequence",
    pattern: "2-D Dynamic Programming",
    link: "longest-common-subsequence/",
    ncLink: "longest-common-subsequence/",
    video: "Ua0GhsJSlWM",
    difficulty: "Medium",
    code: "1143-longest-common-subsequence",
  },
  {
    problem: "Longest Palindromic Subsequence",
    pattern: "2-D Dynamic Programming",
    link: "longest-palindromic-subsequence/",
    video: "bUr8cNWI09Q",
    difficulty: "Medium",
    code: "0516-longest-palindromic-subsequence",
  },
  {
    neetcode250: !0,
    problem: "Last Stone Weight II",
    pattern: "2-D Dynamic Programming",
    link: "last-stone-weight-ii/",
    video: "gdXkkmzvR3c",
    difficulty: "Medium",
    code: "1049-last-stone-weight-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Best Time to Buy And Sell Stock With Cooldown",
    pattern: "2-D Dynamic Programming",
    link: "best-time-to-buy-and-sell-stock-with-cooldown/",
    ncLink: "buy-and-sell-crypto-with-cooldown/",
    video: "I7j0F7AHpb8",
    difficulty: "Medium",
    code: "0309-best-time-to-buy-and-sell-stock-with-cooldown",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Coin Change II",
    pattern: "2-D Dynamic Programming",
    link: "coin-change-ii/",
    ncLink: "coin-change-ii/",
    video: "Mjy4hd2xgrs",
    difficulty: "Medium",
    code: "0518-coin-change-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Target Sum",
    pattern: "2-D Dynamic Programming",
    link: "target-sum/",
    ncLink: "target-sum/",
    video: "dwMOrl85Xes",
    difficulty: "Medium",
    code: "0494-target-sum",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Interleaving String",
    pattern: "2-D Dynamic Programming",
    link: "interleaving-string/",
    ncLink: "interleaving-string/",
    video: "3Rw3p9LrgvE",
    difficulty: "Medium",
    code: "0097-interleaving-string",
  },
  {
    neetcode250: !0,
    problem: "Stone Game",
    pattern: "2-D Dynamic Programming",
    link: "stone-game/",
    video: "uhgdXOlGYqE",
    difficulty: "Medium",
    code: "0877-stone-game",
  },
  {
    neetcode250: !0,
    problem: "Stone Game II",
    pattern: "2-D Dynamic Programming",
    link: "stone-game-ii/",
    video: "I-z-u0zfQtg",
    difficulty: "Medium",
    code: "1140-stone-game-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Longest Increasing Path In a Matrix",
    pattern: "2-D Dynamic Programming",
    link: "longest-increasing-path-in-a-matrix/",
    ncLink: "longest-increasing-path-in-matrix/",
    video: "wCc_nd-GiEc",
    difficulty: "Hard",
    code: "0329-longest-increasing-path-in-a-matrix",
  },
  {
    problem: "Maximal Square",
    pattern: "2-D Dynamic Programming",
    link: "maximal-square/",
    video: "6X7Ha2PrDmM",
    difficulty: "Medium",
    code: "0221-maximal-square",
  },
  {
    problem: "Ones and Zeroes",
    pattern: "2-D Dynamic Programming",
    link: "ones-and-zeroes/",
    video: "miZ3qV04b1g",
    difficulty: "Medium",
    code: "0474-ones-and-zeroes",
  },
  {
    problem: "Maximum Alternating Subsequence Sum",
    pattern: "2-D Dynamic Programming",
    link: "maximum-alternating-subsequence-sum/",
    video: "4v42XOuU1XA",
    difficulty: "Medium",
    code: "1911-maximum-alternating-subsequence-sum",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Distinct Subsequences",
    pattern: "2-D Dynamic Programming",
    link: "distinct-subsequences/",
    ncLink: "count-subsequences/",
    video: "-RDzMJ33nx8",
    difficulty: "Hard",
    code: "0115-distinct-subsequences",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Edit Distance",
    pattern: "2-D Dynamic Programming",
    link: "edit-distance/",
    ncLink: "edit-distance/",
    video: "XYi2-LPrwm4",
    difficulty: "Medium",
    code: "0072-edit-distance",
  },
  {
    link: "number-of-dice-rolls-with-target-sum",
    problem: "Number of Dice Rolls with Target Sum",
    difficulty: "Medium",
    video: "hfUxjdjVQN4",
    pattern: "2-D Dynamic Programming",
    code: "1155-number-of-dice-rolls-with-target-sum",
  },
  {
    link: "minimum-falling-path-sum",
    problem: "Minimum Falling Path Sum",
    difficulty: "Medium",
    video: "b_F3mz9l-uQ",
    pattern: "2-D Dynamic Programming",
    code: "0931-minimum-falling-path-sum",
  },
  {
    link: "out-of-boundary-paths",
    problem: "Out of Boundary Paths",
    difficulty: "Medium",
    video: "Bg5CLRqtNmk",
    pattern: "2-D Dynamic Programming",
    code: "0576-out-of-boundary-paths",
  },
  {
    link: "longest-ideal-subsequence",
    problem: "Longest Ideal Subsequence",
    difficulty: "Medium",
    video: "gR1E2oLQYSY",
    pattern: "2-D Dynamic Programming",
    code: "2370-longest-ideal-subsequence",
  },
  {
    problem: "Count Vowels Permutation",
    pattern: "2-D Dynamic Programming",
    link: "count-vowels-permutation/",
    video: "VUVpTZVa7Ls",
    difficulty: "Hard",
    code: "1220-count-vowels-permutation",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Burst Balloons",
    pattern: "2-D Dynamic Programming",
    link: "burst-balloons/",
    ncLink: "burst-balloons/",
    video: "VFskby7lUbw",
    difficulty: "Hard",
    code: "0312-burst-balloons",
  },
  {
    problem: "Number of Ways to Rearrange Sticks With K Sticks Visible",
    pattern: "2-D Dynamic Programming",
    link: "number-of-ways-to-rearrange-sticks-with-k-sticks-visible/",
    video: "O761YBjGxGA",
    difficulty: "Hard",
    code: "1866-number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Regular Expression Matching",
    pattern: "2-D Dynamic Programming",
    link: "regular-expression-matching/",
    ncLink: "regular-expression-matching/",
    video: "HAA8mgxlov8",
    difficulty: "Hard",
    code: "0010-regular-expression-matching",
  },
  {
    problem: "Flip String to Monotone Increasing",
    pattern: "2-D Dynamic Programming",
    link: "flip-string-to-monotone-increasing/",
    video: "tMq9z5k3umQ",
    difficulty: "Medium",
    code: "0926-flip-string-to-monotone-increasing",
  },
  {
    problem: "Maximum Value of K Coins from Piles",
    pattern: "2-D Dynamic Programming",
    link: "maximum-value-of-k-coins-from-piles/",
    video: "ZRdEd_eun8g",
    difficulty: "Hard",
    code: "2218-maximum-value-of-k-coins-from-piles",
  },
  {
    problem: "Number of Music Playlists",
    pattern: "2-D Dynamic Programming",
    link: "number-of-music-playlists/",
    video: "gk4qzZSmyrs",
    difficulty: "Hard",
    code: "0920-number-of-music-playlists",
  },
  {
    problem: "Number of Ways to Form a Target String Given a Dictionary",
    pattern: "2-D Dynamic Programming",
    link: "number-of-ways-to-form-a-target-string-given-a-dictionary/",
    video: "_GF-0T-YjW8",
    difficulty: "Hard",
    code: "1639-number-of-ways-to-form-a-target-string-given-a-dictionary",
  },
  {
    problem: "Profitable Schemes",
    pattern: "2-D Dynamic Programming",
    link: "profitable-schemes/",
    video: "CcLKQLKvOl8",
    difficulty: "Hard",
    code: "0879-profitable-schemes",
  },
  {
    problem: "Minimum Cost to Cut a Stick",
    pattern: "2-D Dynamic Programming",
    link: "minimum-cost-to-cut-a-stick/",
    video: "EVxTO5I0d7w",
    difficulty: "Hard",
    code: "1547-minimum-cost-to-cut-a-stick",
  },
  {
    link: "painting-the-walls",
    problem: "Painting the Walls",
    difficulty: "Hard",
    video: "qMZJunF5UaI",
    pattern: "2-D Dynamic Programming",
    code: "2742-painting-the-walls",
  },
  {
    link: "number-of-ways-to-stay-in-the-same-place-after-some-steps",
    problem: "Number of Ways to Stay in the Same Place After Some Steps",
    difficulty: "Hard",
    video: "8YBGXG-8sRI",
    pattern: "2-D Dynamic Programming",
    code: "1269-number-of-ways-to-stay-in-the-same-place-after-some-steps",
  },
  {
    link: "string-compression-ii",
    problem: "String Compression II",
    difficulty: "Hard",
    video: "ISIG3o-Xofg",
    pattern: "2-D Dynamic Programming",
    code: "1531-string-compression-ii",
  },
  {
    link: "minimum-difficulty-of-a-job-schedule",
    problem: "Minimum Difficulty of a Job Schedule",
    difficulty: "Hard",
    video: "DAAULrZFeLI",
    pattern: "2-D Dynamic Programming",
    code: "1335-minimum-difficulty-of-a-job-schedule",
  },
  {
    link: "arithmetic-slices-ii-subsequence",
    problem: "Arithmetic Slices II",
    difficulty: "Hard",
    video: "YIMwwT9JdIE",
    pattern: "2-D Dynamic Programming",
    code: "0446-arithmetic-slices-ii-subsequence",
  },
  {
    link: "k-inverse-pairs-array",
    problem: "K Inverse Pairs Array",
    difficulty: "Hard",
    video: "dglwb30bUKI",
    pattern: "2-D Dynamic Programming",
    code: "0629-k-inverse-pairs-array",
  },
  {
    link: "cherry-pickup-ii",
    problem: "Cherry Pickup II",
    difficulty: "Hard",
    video: "c1stwk2TbNk",
    pattern: "2-D Dynamic Programming",
    code: "1463-cherry-pickup-ii",
  },
  {
    link: "minimum-falling-path-sum-ii",
    problem: "Minimum Falling Path Sum II",
    difficulty: "Hard",
    video: "_b8sptrsFEM",
    pattern: "2-D Dynamic Programming",
    code: "1289-minimum-falling-path-sum-ii",
  },
  {
    link: "freedom-trail",
    problem: "Freedom Trail",
    difficulty: "Hard",
    video: "NOgnlTXidSs",
    pattern: "2-D Dynamic Programming",
    code: "0514-freedom-trail",
  },
  {
    link: "buy-two-chocolates",
    problem: "Buy Two Chocolates",
    difficulty: "Easy",
    video: "BTzNimiQdW4",
    pattern: "Greedy",
    code: "2706-buy-two-chocolates",
  },
  {
    neetcode250: !0,
    problem: "Lemonade Change",
    pattern: "Greedy",
    link: "lemonade-change/",
    video: "mSVAw0AUZgA",
    difficulty: "Easy",
    code: "860-lemonade-change",
  },
  {
    link: "maximum-odd-binary-number",
    problem: "Maximum Odd Binary Number",
    difficulty: "Easy",
    video: "EUKLOAv4-IQ",
    pattern: "Greedy",
    code: "2864-maximum-odd-binary-number",
  },
  {
    link: "maximum-nesting-depth-of-the-parentheses",
    problem: "Maximum Nesting Depth of the Parentheses",
    difficulty: "Easy",
    video: "FiQFJvCvWK4",
    pattern: "Greedy",
    code: "1614-maximum-nesting-depth-of-the-parentheses",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Maximum Subarray",
    pattern: "Greedy",
    link: "maximum-subarray/",
    ncLink: "maximum-subarray/",
    video: "5WZl3MMT0Eg",
    difficulty: "Medium",
    code: "0053-maximum-subarray",
  },
  {
    neetcode250: !0,
    problem: "Maximum Sum Circular Subarray",
    pattern: "Greedy",
    link: "maximum-sum-circular-subarray/",
    video: "fxT9KjakYPM",
    difficulty: "Medium",
    code: "0918-maximum-sum-circular-subarray",
  },
  {
    neetcode250: !0,
    problem: "Longest Turbulent Array",
    pattern: "Greedy",
    link: "longest-turbulent-subarray/",
    video: "V_iHUhR8Dek",
    difficulty: "Medium",
    code: "0978-longest-turbulent-subarray",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Jump Game",
    pattern: "Greedy",
    link: "jump-game/",
    ncLink: "jump-game/",
    video: "Yan0cv2cLy8",
    difficulty: "Medium",
    code: "0055-jump-game",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Jump Game II",
    pattern: "Greedy",
    link: "jump-game-ii/",
    ncLink: "jump-game-ii/",
    video: "dJ7sWiOoK7g",
    difficulty: "Medium",
    code: "0045-jump-game-ii",
  },
  {
    neetcode250: !0,
    problem: "Jump Game VII",
    pattern: "Greedy",
    link: "jump-game-vii/",
    video: "v1HpZUnQ4Yo",
    difficulty: "Medium",
    code: "1871-jump-game-vii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Gas Station",
    pattern: "Greedy",
    link: "gas-station/",
    ncLink: "gas-station/",
    video: "lJwbPZGo05A",
    difficulty: "Medium",
    code: "0134-gas-station",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Hand of Straights",
    pattern: "Greedy",
    link: "hand-of-straights/",
    ncLink: "hand-of-straights/",
    video: "amnrMCVd2YI",
    difficulty: "Medium",
    code: "0846-hand-of-straights",
  },
  {
    problem: "Minimize Maximum of Array",
    pattern: "Greedy",
    link: "minimize-maximum-of-array/",
    video: "AeHMvcKuR0Y",
    difficulty: "Medium",
    code: "2439-minimize-maximum-of-array",
  },
  {
    neetcode250: !0,
    problem: "Dota2 Senate",
    pattern: "Greedy",
    link: "dota2-senate/",
    video: "zZA5KskfMuQ",
    difficulty: "Medium",
    code: "0649-dota2-senate",
  },
  {
    problem: "Maximum Points You Can Obtain From Cards",
    pattern: "Greedy",
    link: "maximum-points-you-can-obtain-from-cards/",
    video: "TsA4vbtfCvo",
    difficulty: "Medium",
    code: "1423-maximum-points-you-can-obtain-from-cards",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Merge Triplets to Form Target Triplet",
    pattern: "Greedy",
    link: "merge-triplets-to-form-target-triplet/",
    ncLink: "merge-triplets-to-form-target/",
    video: "kShkQLQZ9K4",
    difficulty: "Medium",
    code: "1899-merge-triplets-to-form-target-triplet",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Partition Labels",
    pattern: "Greedy",
    link: "partition-labels/",
    ncLink: "partition-labels/",
    video: "B7m8UmZE-vw",
    difficulty: "Medium",
    code: "0763-partition-labels",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Valid Parenthesis String",
    pattern: "Greedy",
    link: "valid-parenthesis-string/",
    ncLink: "valid-parenthesis-string/",
    video: "QhPdNS143Qg",
    difficulty: "Medium",
    code: "0678-valid-parenthesis-string",
  },
  {
    problem: "Eliminate Maximum Number of Monsters",
    pattern: "Greedy",
    link: "eliminate-maximum-number-of-monsters/",
    video: "6QQRayzOTD4",
    difficulty: "Medium",
    code: "1921-eliminate-maximum-number-of-monsters",
  },
  {
    problem: "Two City Scheduling",
    pattern: "Greedy",
    link: "two-city-scheduling/",
    video: "d-B_gk_gJtQ",
    difficulty: "Medium",
    code: "1029-two-city-scheduling",
  },
  {
    problem: "Maximum Length of Pair Chain",
    pattern: "Greedy",
    link: "maximum-length-of-pair-chain/",
    video: "LcNNorqMVTw",
    difficulty: "Medium",
    code: "0646-maximum-length-of-pair-chain",
  },
  {
    problem: "Minimum Deletions to Make Character Frequencies Unique",
    pattern: "Greedy",
    link: "minimum-deletions-to-make-character-frequencies-unique/",
    video: "h8AZEN49gTc",
    difficulty: "Medium",
    code: "1647-minimum-deletions-to-make-character-frequencies-unique",
  },
  {
    neetcode250: !0,
    problem: "Candy",
    pattern: "Greedy",
    link: "candy/",
    video: "1IzCRCcK17A",
    difficulty: "Hard",
    code: "135-candy",
  },
  {
    link: "remove-colored-pieces-if-both-neighbors-are-the-same-color",
    problem: "Remove Colored Pieces if Both Neighbors are the Same Color",
    difficulty: "Medium",
    video: "T54GScWobZ4",
    pattern: "Greedy",
    code: "2038-remove-colored-pieces-if-both-neighbors-are-the-same-color",
  },
  {
    link: "maximum-element-after-decreasing-and-rearranging",
    problem: "Maximum Element After Decreasing and Rearranging",
    difficulty: "Medium",
    video: "o_hVl8IXuIE",
    pattern: "Greedy",
    code: "1846-maximum-element-after-decreasing-and-rearranging",
  },
  {
    link: "number-of-laser-beams-in-a-bank",
    problem: "Number of Laser Beams in a Bank",
    difficulty: "Medium",
    video: "KLeKv59LAFY",
    pattern: "Greedy",
    code: "2125-number-of-laser-beams-in-a-bank",
  },
  {
    link: "reveal-cards-in-increasing-order",
    problem: "Reveal Cards In Increasing Order",
    difficulty: "Medium",
    video: "i2QrUdwWlak",
    pattern: "Greedy",
    code: "0950-reveal-cards-in-increasing-order",
  },
  {
    link: "score-after-flipping-matrix",
    problem: "Score After Flipping Matrix",
    difficulty: "Medium",
    video: "FbhzRA5den8",
    pattern: "Greedy",
    code: "0861-score-after-flipping-matrix",
  },
  {
    link: "maximum-score-of-a-good-subarray",
    problem: "Maximum Score of a Good Subarray",
    difficulty: "Hard",
    video: "_K7oyQlAjv4",
    pattern: "Greedy",
    code: "1793-maximum-score-of-a-good-subarray",
  },
  {
    link: "find-the-maximum-sum-of-node-values",
    problem: "Find the Maximum Sum of Node Values",
    difficulty: "Hard",
    video: "bnBp6_b4GCw",
    pattern: "Greedy",
    code: "3068-find-the-maximum-sum-of-node-values",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Insert Interval",
    pattern: "Intervals",
    link: "insert-interval/",
    ncLink: "insert-new-interval/",
    video: "A8NUOmlwOlM",
    difficulty: "Medium",
    code: "0057-insert-interval",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Merge Intervals",
    pattern: "Intervals",
    link: "merge-intervals/",
    ncLink: "merge-intervals/",
    video: "44H3cEC2fFM",
    difficulty: "Medium",
    code: "0056-merge-intervals",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Non Overlapping Intervals",
    pattern: "Intervals",
    link: "non-overlapping-intervals/",
    ncLink: "non-overlapping-intervals/",
    video: "nONCGxWoUfM",
    difficulty: "Medium",
    code: "0435-non-overlapping-intervals",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Meeting Rooms",
    premium: !0,
    ncLink: "meeting-schedule/",
    pattern: "Intervals",
    link: "meeting-rooms/",
    video: "PaJxqZVPhbg",
    difficulty: "Easy",
    code: "0252-meeting-rooms",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Meeting Rooms II",
    premium: !0,
    ncLink: "meeting-schedule-ii/",
    pattern: "Intervals",
    link: "meeting-rooms-ii/",
    video: "FdzJmTCVyJU",
    difficulty: "Medium",
    code: "0253-meeting-rooms-ii",
  },
  {
    neetcode250: !0,
    link: "meeting-rooms-iii",
    problem: "Meeting Rooms III",
    difficulty: "Hard",
    video: "2VLwjvODQbA",
    pattern: "Intervals",
    code: "2402-meeting-rooms-iii",
  },
  {
    problem: "Remove Covered Intervals",
    pattern: "Intervals",
    link: "remove-covered-intervals/",
    video: "nhAsMabiVkM",
    difficulty: "Medium",
    code: "1288-remove-covered-intervals",
  },
  {
    link: "minimum-number-of-arrows-to-burst-balloons",
    problem: "Minimum Number of Arrows to Burst Balloons",
    difficulty: "Medium",
    video: "lPmkKnvNPrw",
    pattern: "Intervals",
    code: "0452-minimum-number-of-arrows-to-burst-balloons",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Minimum Interval to Include Each Query",
    pattern: "Intervals",
    link: "minimum-interval-to-include-each-query/",
    ncLink: "minimum-interval-including-query/",
    video: "5hQ5WWW5awQ",
    difficulty: "Hard",
    code: "1851-minimum-interval-to-include-each-query",
  },
  {
    problem: "Data Stream as Disjoint Intervals",
    pattern: "Intervals",
    link: "data-stream-as-disjoint-intervals/",
    video: "FavoZjPIWpo",
    difficulty: "Hard",
    code: "0352-data-stream-as-disjoint-intervals",
  },
  {
    neetcode250: !0,
    problem: "Excel Sheet Column Title",
    pattern: "Math & Geometry",
    link: "excel-sheet-column-title/",
    video: "X_vJDpCCuoA",
    difficulty: "Easy",
    code: "0168-excel-sheet-column-title",
  },
  {
    neetcode250: !0,
    problem: "Greatest Common Divisor of Strings",
    pattern: "Math & Geometry",
    link: "greatest-common-divisor-of-strings/",
    video: "i5I_wrbUdzM",
    difficulty: "Easy",
    code: "1071-greatest-common-divisor-of-strings",
  },
  {
    neetcode250: !0,
    problem: "Insert Greatest Common Divisors in Linked List",
    pattern: "Math & Geometry",
    link: "insert-greatest-common-divisors-in-linked-list/",
    video: "SS_IlBrocYQ",
    difficulty: "Medium",
    code: "2807-insert-greatest-common-divisors-in-linked-list",
  },
  {
    problem: "Count Odd Numbers in an Interval Range",
    pattern: "Math & Geometry",
    link: "count-odd-numbers-in-an-interval-range/",
    video: "wrIWye928JQ",
    difficulty: "Easy",
    code: "1523-count-odd-numbers-in-an-interval-range",
  },
  {
    problem: "Matrix Diagonal Sum",
    pattern: "Math & Geometry",
    link: "matrix-diagonal-sum/",
    video: "WliTu6gIK7o",
    difficulty: "Easy",
    code: "1572-matrix-diagonal-sum",
  },
  {
    link: "calculate-money-in-leetcode-bank",
    problem: "Calculate Money in Leetcode Bank",
    difficulty: "Easy",
    video: "tKK7gvPCQfs",
    pattern: "Math & Geometry",
    code: "1716-calculate-money-in-leetcode-bank",
  },
  {
    link: "largest-odd-number-in-string",
    problem: "Largest Odd Number in String",
    difficulty: "Easy",
    video: "svuPjFAUeDE",
    pattern: "Math & Geometry",
    code: "1903-largest-odd-number-in-string",
  },
  {
    neetcode250: !0,
    link: "transpose-matrix",
    problem: "Transpose Matrix",
    difficulty: "Easy",
    video: "DzMT3bDgVn0",
    pattern: "Math & Geometry",
    code: "0867-transpose-matrix",
  },
  {
    link: "image-smoother",
    problem: "Image Smoother",
    difficulty: "Easy",
    video: "xa83GG1RIOY",
    pattern: "Math & Geometry",
    code: "0661-image-smoother",
  },
  {
    link: "count-of-matches-in-tournament",
    problem: "Count of Matches in Tournament",
    difficulty: "Easy",
    video: "lslcc0tumpU",
    pattern: "Math & Geometry",
    code: "1688-count-of-matches-in-tournament",
  },
  {
    link: "largest-local-values-in-a-matrix",
    problem: "Largest Local Values in a Matrix",
    difficulty: "Easy",
    video: "wdTRu9sarFA",
    pattern: "Math & Geometry",
    code: "2373-largest-local-values-in-a-matrix",
  },
  {
    link: "power-of-four",
    problem: "Power of Four",
    difficulty: "Easy",
    video: "qEYZPwnlM0U",
    pattern: "Math & Geometry",
    code: "0342-power-of-four",
  },
  {
    problem: "Maximum Points on a Line",
    pattern: "Math & Geometry",
    link: "max-points-on-a-line/",
    video: "Bb9lOXUOnFw",
    difficulty: "Hard",
    code: "0149-max-points-on-a-line",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Rotate Image",
    pattern: "Math & Geometry",
    link: "rotate-image/",
    ncLink: "rotate-matrix/",
    video: "fMSJSS7eO1w",
    difficulty: "Medium",
    code: "0048-rotate-image",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Spiral Matrix",
    pattern: "Math & Geometry",
    link: "spiral-matrix/",
    ncLink: "spiral-matrix/",
    video: "BJnMZNwUk1M",
    difficulty: "Medium",
    code: "0054-spiral-matrix",
  },
  {
    problem: "Spiral Matrix II ",
    pattern: "Math & Geometry",
    link: "spiral-matrix-ii/",
    video: "RvLrWFBJ9fM",
    difficulty: "Medium",
    code: "0059-spiral-matrix-ii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Set Matrix Zeroes",
    pattern: "Math & Geometry",
    link: "set-matrix-zeroes/",
    ncLink: "set-zeroes-in-matrix/",
    video: "T41rL0L3Pnw",
    difficulty: "Medium",
    code: "0073-set-matrix-zeroes",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Happy Number",
    pattern: "Math & Geometry",
    link: "happy-number/",
    ncLink: "non-cyclical-number/",
    video: "ljz85bxOYJ0",
    difficulty: "Easy",
    code: "0202-happy-number",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Plus One",
    pattern: "Math & Geometry",
    link: "plus-one/",
    ncLink: "plus-one/",
    video: "jIaA8boiG1s",
    difficulty: "Easy",
    code: "0066-plus-one",
  },
  {
    problem: "Palindrome Number",
    pattern: "Math & Geometry",
    link: "palindrome-number/",
    video: "yubRKwixN-U",
    difficulty: "Easy",
    code: "0009-palindrome-number",
  },
  {
    problem: "Ugly Number",
    pattern: "Math & Geometry",
    link: "ugly-number/",
    video: "M0Zay1Qr9ws",
    difficulty: "Easy",
    code: "0263-ugly-number",
  },
  {
    problem: "Shift 2D Grid",
    pattern: "Math & Geometry",
    link: "shift-2d-grid/",
    video: "nJYFh4Dl-as",
    difficulty: "Easy",
    code: "1260-shift-2d-grid",
  },
  {
    neetcode250: !0,
    problem: "Roman to Integer",
    pattern: "Math & Geometry",
    link: "roman-to-integer/",
    video: "3jdxYj3DD98",
    difficulty: "Easy",
    code: "0013-roman-to-integer",
  },
  {
    problem: "Integer to Roman",
    pattern: "Math & Geometry",
    link: "integer-to-roman/",
    video: "ohBNdSJyLh8",
    difficulty: "Medium",
    code: "0012-integer-to-roman",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Pow(x, n)",
    pattern: "Math & Geometry",
    link: "powx-n/",
    ncLink: "pow-x-n/",
    video: "g9YQyYi4IQQ",
    difficulty: "Medium",
    code: "0050-powx-n",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Multiply Strings",
    pattern: "Math & Geometry",
    link: "multiply-strings/",
    ncLink: "multiply-strings/",
    video: "1vZswirL8Y8",
    difficulty: "Medium",
    code: "0043-multiply-strings",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Detect Squares",
    pattern: "Math & Geometry",
    link: "detect-squares/",
    ncLink: "count-squares/",
    video: "bahebearrDc",
    difficulty: "Medium",
    code: "2013-detect-squares",
  },
  {
    problem: "Robot Bounded In Circle",
    pattern: "Math & Geometry",
    link: "robot-bounded-in-circle/",
    video: "nKv2LnC_g6E",
    difficulty: "Medium",
    code: "1041-robot-bounded-in-circle",
  },
  {
    problem: "Zigzag Conversion",
    pattern: "Math & Geometry",
    link: "zigzag-conversion/",
    video: "Q2Tw6gcVEwc",
    difficulty: "Medium",
    code: "0006-zigzag-conversion",
  },
  {
    problem: "Find Missing Observations",
    pattern: "Math & Geometry",
    link: "find-missing-observations/",
    video: "86yKkaNi3sU",
    difficulty: "Medium",
    code: "2028-find-missing-observations",
  },
  {
    link: "largest-submatrix-with-rearrangements",
    problem: "Largest Submatrix With Rearrangements",
    difficulty: "Medium",
    video: "NYyIVuSCfOA",
    pattern: "Math & Geometry",
    code: "1727-largest-submatrix-with-rearrangements",
  },
  {
    link: "widest-vertical-area-between-two-points-containing-no-points",
    problem: "Wildest Vertical Area Between Two Points Containing No Points",
    difficulty: "Easy",
    video: "6XnvNCTyJP4",
    pattern: "Math & Geometry",
    code: "1637-widest-vertical-area-between-two-points-containing-no-points",
  },
  {
    link: "minimum-one-bit-operations-to-make-integers-zero",
    problem: "Minimum Number of One Bit Operations to Make Integers Zero",
    difficulty: "Hard",
    video: "yRI18_MaG7k",
    pattern: "Math & Geometry",
    code: "1611-minimum-one-bit-operations-to-make-integers-zero",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Single Number",
    pattern: "Bit Manipulation",
    link: "single-number/",
    ncLink: "single-number/",
    video: "qMPX1AOa83k",
    difficulty: "Easy",
    code: "0136-single-number",
  },
  {
    problem: "Single Number III",
    pattern: "Bit Manipulation",
    link: "single-number-iii/",
    video: "faoVORjd-T8",
    difficulty: "Medium",
    code: "0260-single-number-iii",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Number of 1 Bits",
    pattern: "Bit Manipulation",
    link: "number-of-1-bits/",
    ncLink: "number-of-one-bits/",
    video: "5Km3utixwZs",
    difficulty: "Easy",
    code: "0191-number-of-1-bits",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Counting Bits",
    pattern: "Bit Manipulation",
    link: "counting-bits/",
    ncLink: "counting-bits/",
    video: "RyBM56RIWrM",
    difficulty: "Easy",
    code: "0338-counting-bits",
  },
  {
    neetcode250: !0,
    problem: "Add Binary",
    pattern: "Bit Manipulation",
    link: "add-binary/",
    video: "keuWJ47xG8g",
    difficulty: "Easy",
    code: "0067-add-binary",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Reverse Bits",
    pattern: "Bit Manipulation",
    link: "reverse-bits/",
    ncLink: "reverse-bits/",
    video: "UcoN6UjAI64",
    difficulty: "Easy",
    code: "0190-reverse-bits",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Missing Number",
    pattern: "Bit Manipulation",
    link: "missing-number/",
    ncLink: "missing-number/",
    video: "WnPLSRLSANE",
    difficulty: "Easy",
    code: "0268-missing-number",
  },
  {
    problem: "Shuffle the Array",
    pattern: "Bit Manipulation",
    link: "shuffle-the-array/",
    video: "IvIKD_EU8BY",
    difficulty: "Easy",
    code: "1470-shuffle-the-array",
  },
  {
    problem: "Add to Array-Form of Integer",
    pattern: "Bit Manipulation",
    link: "add-to-array-form-of-integer/",
    video: "eBTZQt1TWfk",
    difficulty: "Easy",
    code: "0989-add-to-array-form-of-integer",
  },
  {
    link: "find-the-difference",
    problem: "Find the Diffrence",
    difficulty: "Easy",
    video: "oFmv4N4z00c",
    pattern: "Bit Manipulation",
    code: "0389-find-the-difference",
  },
  {
    link: "power-of-two",
    problem: "Power of Two",
    difficulty: "Easy",
    video: "H2bjttEV4Vc",
    pattern: "Bit Manipulation",
    code: "0231-power-of-two",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    blind75: !0,
    problem: "Sum of Two Integers",
    pattern: "Bit Manipulation",
    link: "sum-of-two-integers/",
    ncLink: "sum-of-two-integers/",
    video: "gVUrDV4tZfY",
    difficulty: "Medium",
    code: "0371-sum-of-two-integers",
  },
  {
    neetcode150: !0,
    neetcode250: !0,
    problem: "Reverse Integer",
    pattern: "Bit Manipulation",
    link: "reverse-integer/",
    ncLink: "reverse-integer/",
    video: "HAgLH58IgJQ",
    difficulty: "Medium",
    code: "0007-reverse-integer",
  },
  {
    neetcode250: !0,
    link: "bitwise-and-of-numbers-range",
    problem: "Bitwise AND of Numbers Range",
    difficulty: "Medium",
    video: "R3T0olAhUq0",
    pattern: "Bit Manipulation",
    code: "0201-bitwise-and-of-numbers-range",
  },
  {
    link: "count-triplets-that-can-form-two-arrays-of-equal-xor",
    problem: "Count Triplets That Can Form Two Arrays of Equal XOR",
    difficulty: "Medium",
    video: "e4Yx9KjqzQ8",
    pattern: "Bit Manipulation",
    code: "1442-count-triplets-that-can-form-two-arrays-of-equal-xor",
  },
  {
    neetcode250: !0,
    link: "minimum-array-end/",
    problem: "Minimum Array End",
    difficulty: "Medium",
    video: "4pP-0UpEok4",
    pattern: "Bit Manipulation",
    code: "3133-minimum-array-end",
  },
  {
    problem: "Create Hello World Function",
    pattern: "JavaScript",
    link: "create-hello-world-function/",
    video: "P9Ldx1eTlRc",
    difficulty: "Easy",
    code: "2667-create-hello-world-function",
  },
  {
    problem: "Counter",
    pattern: "JavaScript",
    link: "counter/",
    video: "yEGQQAG5V68",
    difficulty: "Easy",
    code: "2620-counter",
  },
  {
    problem: "Counter II",
    pattern: "JavaScript",
    link: "counter-ii/",
    video: "UXNXKGFZD08",
    difficulty: "Easy",
    code: "2665-counter-ii",
  },
  {
    problem: "Apply Transform over each Element in Array",
    pattern: "JavaScript",
    link: "apply-transform-over-each-element-in-array/",
    video: "7FhJHA5jlYk",
    difficulty: "Easy",
    code: "2635-apply-transform-over-each-element-in-array",
  },
  {
    problem: "Filter Elements from Array",
    pattern: "JavaScript",
    link: "filter-elements-from-array/",
    video: "w1o81gbEEJU",
    difficulty: "Easy",
    code: "2634-filter-elements-from-array",
  },
  {
    problem: "Array Reduce Transformation",
    pattern: "JavaScript",
    link: "array-reduce-transformation/",
    video: "KmTbYfpGxdM",
    difficulty: "Easy",
    code: "2626-array-reduce-transformation",
  },
  {
    problem: "Function Composition",
    pattern: "JavaScript",
    link: "function-composition/",
    video: "mIFw1H7Ljco",
    difficulty: "Easy",
    code: "2629-function-composition",
  },
  {
    problem: "Allow One Function Call",
    pattern: "JavaScript",
    link: "allow-one-function-call/",
    video: "m_SWhM9iX3s",
    difficulty: "Easy",
    code: "2666-allow-one-function-call",
  },
  {
    problem: "Memoize",
    pattern: "JavaScript",
    link: "memoize/",
    video: "oFXyzJt9VeU",
    difficulty: "Medium",
    code: "2623-memoize",
  },
  {
    problem: "Curry",
    pattern: "JavaScript",
    link: "curry/",
    video: "pi4kqMWQXxA",
    difficulty: "Medium",
    code: "2632-curry",
  },
  {
    problem: "Sleep",
    pattern: "JavaScript",
    link: "sleep/",
    video: "P0D9Z6H7O00",
    difficulty: "Easy",
    code: "2621-sleep",
  },
  {
    problem: "Promise Time Limit",
    pattern: "JavaScript",
    link: "promise-time-limit/",
    video: "hfH57rdZhOk",
    difficulty: "Easy",
    code: "2637-promise-time-limit",
  },
  {
    problem: "Promise Pool",
    pattern: "JavaScript",
    link: "promise-pool/",
    video: "DB8pAAg-9xw",
    difficulty: "Medium",
    code: "2636-promise-pool",
  },
  {
    problem: "Cache With Time Limit",
    pattern: "JavaScript",
    link: "cache-with-time-limit/",
    video: "w772gtNK0Gw",
    difficulty: "Medium",
    code: "2622-cache-with-time-limit",
  },
  {
    problem: "Debounce",
    pattern: "JavaScript",
    link: "debounce/",
    video: "1sxSpnxNx5w",
    difficulty: "Medium",
    code: "2627-debounce",
  },
  {
    problem: "Throttle",
    pattern: "JavaScript",
    link: "throttle/",
    video: "zyGZV_fIQWk",
    difficulty: "Medium",
    code: "2676-throttle",
  },
  {
    problem: "JSON Deep Equal",
    pattern: "JavaScript",
    link: "json-deep-equal/",
    video: "4JVZ-mVqJPg",
    difficulty: "Medium",
    code: "2628-json-deep-equal",
  },
  {
    problem: "Convert Object to JSON String",
    pattern: "JavaScript",
    link: "convert-object-to-json-string/",
    video: "f94fUbHU-FY",
    difficulty: "Medium",
    code: "2633-convert-object-to-json-string",
  },
  {
    problem: "Array of Objects to Matrix",
    pattern: "JavaScript",
    link: "array-of-objects-to-matrix/",
    video: "LJwgAMHGcI0",
    difficulty: "Medium",
    code: "2675-array-of-objects-to-matrix",
  },
  {
    problem: "Difference Between Two Objects",
    pattern: "JavaScript",
    link: "differences-between-two-objects/",
    video: "gH7oZs1WZfg",
    difficulty: "Medium",
    code: "2700-differences-between-two-objects",
  },
  {
    problem: "Chunk Array",
    pattern: "JavaScript",
    link: "chunk-array/",
    video: "VUN-O3B9ceY",
    difficulty: "Easy",
    code: "2677-chunk-array",
  },
  {
    problem: "Flatten Deeply Nested Array",
    pattern: "JavaScript",
    link: "flatten-deeply-nested-array/",
    video: "_DetLPKtFNk",
    difficulty: "Medium",
    code: "2625-flatten-deeply-nested-array",
  },
  {
    problem: "Array Prototype Last",
    pattern: "JavaScript",
    link: "array-prototype-last/",
    video: "3JdtfMBrUqc",
    difficulty: "Easy",
    code: "2619-array-prototype-last",
  },
  {
    problem: "Group By",
    pattern: "JavaScript",
    link: "group-by/",
    video: "zs9axOyYHRE",
    difficulty: "Medium",
    code: "2631-group-by",
  },
  {
    problem: "Check if Object Instance of Class",
    pattern: "JavaScript",
    link: "check-if-object-instance-of-class/",
    video: "meIo-Q07Ba8",
    difficulty: "Medium",
    code: "2618-check-if-object-instance-of-class",
  },
  {
    problem: "Call Function with Custom Context",
    pattern: "JavaScript",
    link: "call-function-with-custom-context/",
    video: "du_GH-Ooa8E",
    difficulty: "Medium",
    code: "2693-call-function-with-custom-context",
  },
  {
    problem: "Event Emitter",
    pattern: "JavaScript",
    link: "event-emitter/",
    video: "M69bjWFarU0",
    difficulty: "Medium",
    code: "2694-event-emitter",
  },
  {
    problem: "Array Wrapper",
    pattern: "JavaScript",
    link: "array-wrapper/",
    video: "XoGjPdPTAVA",
    difficulty: "Easy",
    code: "2695-array-wrapper",
  },
  {
    problem: "Generate Fibonacci Sequence",
    pattern: "JavaScript",
    link: "generate-fibonacci-sequence/",
    video: "T643rQ70Jlk",
    difficulty: "Easy",
    code: "2648-generate-fibonacci-sequence",
  },
  {
    problem: "Nested Array Generator",
    pattern: "JavaScript",
    link: "nested-array-generator/",
    video: "yo-J1jQaZYU",
    difficulty: "Medium",
    code: "2649-nested-array-generator",
  },
];

export const neetcode150 = () =>
  problems.filter((problem) => problem.neetcode150 === true);
export const neetcode250 = () =>
  problems.filter((problem) => problem.neetcode250 === true);
export const blind75 = () =>
  problems.filter((problem) => problem.blind75 === true);
export const neetcodeAll = () => problems;
